<?php

namespace myerm\kuaidi100\models;


/**
 * 快递信息跟踪
 * ============================================================================
 * 版权所有 2010-2017 三只象（厦门）网络科技有限公司，并保留所有权利。
 * 网站地址: http://www.myerm.cn
 * ----------------------------------------------------------------------------
 * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和
 * 使用；不允许对程序代码以任何形式任何目的的再发布。
 * ============================================================================
 * @author 陈鹭明
 * @since 2017年10月27日 23:48:55
 * @version v2.0
 */
class ExpressTrace extends \myerm\common\models\ExpressTrace
{
    public $sKey = "";
    public $sCustomerNo = "";
    public $sNotifyUrl = "";

    public function __construct(array $config = [])
    {
        parent::__construct($config);

        $main = require(__DIR__ . '/../../../config/kuaidi100/main.php');
        $this->sKey = $main['sKey'];
        $this->sCustomerNo = $main['sCustomerNo'];
        $this->sNotifyUrl = $main['sNotifyUrl'];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $main = require(__DIR__ . '/../../../config/kuaidi100/main.php');
        $this->sKey = $main['sKey'];
        $this->sCustomerNo = $main['sCustomerNo'];
    }


    /**
     * 保存快递100回调信息
     * @param array $param
     * @return bool
     */
    public function saveNotifyData($param = [])
    {
        \Yii::info($param, '保存订单参数数据');
        if (empty($param['lastResult']['nu'])) {
            return false;
        }
        $data = $param['lastResult'];
        $sNo = $param['lastResult']['nu'];

        $expressInfo = self::findOne(['sNo' => $sNo]);
        if (empty($expressInfo)) {
            \Yii::info('新建');
            $expressInfo = new static();
            $expressInfo->sNo = $sNo;
            $expressInfo->dNewDate = \Yii::$app->formatter->asDatetime(time());
        }

        $expressInfo->sStatus = $this->getState($data['state']);

        //更新数据
        $expressInfo->sTraceInfo = json_encode($data['data']);
        $expressInfo->dSignDate = $expressInfo->getSignDate();

        if ($data['data'][0]['time']) {
            $expressInfo->dLastUpDate = $data['data'][0]['time'];
        } else {
            $expressInfo->dLastUpDate = \Yii::$app->formatter->asDatetime(time());
        }

        $expressInfo->sCompanyCode = $data['com'];

        //dNextUp为的是给计划任务下一次执行的时间
        if ($expressInfo->sStatus != "签收") {
            $expressInfo->dNextUp = \Yii::$app->formatter->asDatetime(time() + 3600 * 6);//每六个小时跑一个物流接口更新数据
        } else {
            $expressInfo->dNextUp = null;//已签收的邮件，不用再跑接口
        }

        $expressInfo->save();

        return true;
    }

    /**
     * 获取快递单当前的状态
     * @param $lState
     * @return string
     */
    public function getState($lState)
    {
        switch ($lState) {
            case '0':
                return '在途';
            case '1':
                return '揽件';
            case '2':
                return '疑难';
            case '3':
                return '签收';
            case '4':
                return '退签';
            case '5':
                return '派件';
            case '6':
                return '退回';
            case '':
                return '查无信息';
        }
    }

    /**
     * 提取签收的时间
     */
    public function getSignDate()
    {
        if ($this->sStatus == '签收') {
            $arrTrace = json_decode($this->sTraceInfo, true);
            foreach ($arrTrace as $trace) {
                return $trace['time'];
            }
        }

        return null;
    }

    /**
     * 订阅物流信息
     */
    public function poll($data)
    {
        \Yii::trace('开始订阅...');
        $postData = [];

        $sCompanyCode = ExpressCompany::getCompanyCode($data['ExpressCompanyID']);

        $param = [ //参数
            'company' => $sCompanyCode, //快递公司
            'number' => $data['sNo'], //运单号
            'key' => $this->sKey, //key
            'parameters' => [ //回调地址
                'callbackurl' => $this->sNotifyUrl . "/api/tracenotify"
            ],
        ];

        $postData["schema"] = 'json';//请求数据格式为json数据请求
        $postData['param'] = json_encode($param);

        $arrParam = [];
        foreach ($postData as $key => $value) {
            $arrParam[] = "$key=" . urlencode($value);
        }
        $sParam = implode('&', $arrParam);

        \Yii::trace([
            '请求参数' => $postData,
            '请求参数url编码' => $arrParam,
            '请求字符串' => $sParam,
            '请求地址' => 'http://www.kuaidi100.com/poll'
        ], 'request');


        //发送请求
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_URL, 'http://www.kuaidi100.com/poll');
        curl_setopt($ch, CURLOPT_POSTFIELDS, $sParam);

        $result = curl_exec($ch);        //返回提交结果，格式与指定的格式一致（result=true代表成功）

        //释放curl句柄
        curl_close($ch);

        $result = json_decode($result, true);
        \Yii::info($result, 'response');
	
        /* 不在判断订阅结果 by hechengcheng on 2019年3月16日14:00:45 */
	    //初始化
	    $express = static::findOne(['sNo' => $data['sNo']]);
	    if (!$express) {
		    $result = static::query($data['ExpressCompanyID'], $data['sNo']);
		    $arrResult = json_decode($result, true);
		
		    $express = new static();
		    $express->sNo = $data['sNo'];
		    $express->dNewDate = \Yii::$app->formatter->asDatetime(time());
		    $express->sTraceInfo = json_encode($arrResult['data']);
		    $express->sStatus = $express->getState($arrResult['state']);
		    $express->dSignDate = $express->getSignDate();
		
		    if ($arrResult['data'][0]['time']) {
			    $express->dLastUpDate = $arrResult['data'][0]['time'];
		    } else {
			    $express->dLastUpDate = \Yii::$app->formatter->asDatetime(time());
		    }
		
		    //dNextUp为的是给计划任务下一次执行的时间
		    if ($express->sStatus != "签收") {
			    $express->dNextUp = \Yii::$app->formatter->asDatetime(time() + 3600 * 6);//每六个小时跑一个物流接口更新数据
		    } else {
			    $express->dNextUp = null;//已签收的邮件，不用再跑接口
		    }
		
		    $express->sCompanyCode = $sCompanyCode;
		
		    $express->save();
	    }
	
	    return true;
    }

    /**
     * 实时查询
     * @param $sCompanyCode
     * @param $sNo
     * @return mixed
     */
    public function query($ExpressCompanyID, $sNo)
    {
        $sCompanyCode = ExpressCompany::getCompanyCode($ExpressCompanyID);
        if (!$sCompanyCode) {
            $sCompanyCode = $ExpressCompanyID;
        }

        \Yii::trace('开始实时查询...');

        //构建post请求数据
        $arrPostData = [];
        $arrPostData['customer'] = $this->sCustomerNo;
        $arrPostData['param'] = json_encode(['com' => $sCompanyCode, 'num' => $sNo]);
        $arrPostData['sign'] = md5($arrPostData['param'] . $this->sKey . $this->sCustomerNo);
        $arrPostData['sign'] = strtoupper($arrPostData['sign']);

        $arrParam = "";
        foreach ($arrPostData as $key => $value) {
            $arrParam [] = $key . '=' . urlencode($value);
        }
        $sParam = implode('&', $arrParam);

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, 'http://poll.kuaidi100.com/poll/query.do');
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $sParam);
        $result = curl_exec($ch);        //返回提交结果，格式与指定的格式一致（result=true代表成功）

        //释放curl句柄
        curl_close($ch);
        \Yii::trace(json_decode($result, true), '实时查询返回结果');

        return $result;
    }

    /**
     * 免费查询接口
     * @param $ExpressCompanyID
     * @param $sNo
     */
    public function queryFree($ExpressCompanyID, $sNo)
    {
        $data = json_decode($this->query($ExpressCompanyID, $sNo), true);

        $return = [];
        if ($data['status'] == 200) {
            $return['status'] = true;
            if ($data['state'] == 0) {
                $return['state'] = '在途';
            } elseif ($data['state'] == 1) {
                $return['state'] = '揽件';
            } elseif ($data['state'] == 2) {
                $return['state'] = '疑难';
            } elseif ($data['state'] == 3) {
                $return['state'] = '签收';
            } elseif ($data['state'] == 4) {
                $return['state'] = '退签';
            } elseif ($data['state'] == 5) {
                $return['state'] = '派件';
            } elseif ($data['state'] == 6) {
                $return['state'] = '退回';
            }

            $return['data'] = $data['data'];
        } else {
            $return['status'] = false;
            $return['message'] = $data['message'];
        }

        return $return;
    }

    /**
     * 通过订单号查询
     */
    public function getByNo($sNo)
    {
        return static::findOne($sNo);
    }

    /**
     * 同步超时的物流信息
     */
    public function sync()
    {
        $arrTraceTimeout = static::find()->select([
            'sNo',
            'sCompanyCode'
        ])->where("dNextUp<'" . \Yii::$app->formatter->asDatetime(time()) . "' AND sStatus<>'签收'")->all();
        foreach ($arrTraceTimeout as $trace) {
            $result = static::query($trace->sCompanyCode, $trace->sNo);
            $arrResult = json_decode($result, true);

            $trace->sTraceInfo = json_encode($arrResult['data']);
            $trace->sStatus = $trace->getState($arrResult['state']);
            $trace->dSignDate = $trace->getSignDate();

            if ($arrResult['data'][0]['time']) {
                $trace->dLastUpDate = $arrResult['data'][0]['time'];
            } else {
                $trace->dLastUpDate = \Yii::$app->formatter->asDatetime(time());
            }

            //dNextUp为的是给计划任务下一次执行的时间
            if ($trace->sStatus != "签收") {
                $trace->dNextUp = \Yii::$app->formatter->asDatetime(time() + 3600 * 6);//每六个小时跑一个物流接口更新数据
            } else {
                $trace->dNextUp = null;//已签收的邮件，不用再跑接口
            }

            $trace->save();
        }
    }

    /**
     * 处理订单里没有被跟踪的物流
     */
    public function orderNoTrace()
    {
        $arrDetail = \Yii::$app->orderdetail->arrNoTrace;
        foreach ($arrDetail as $detail) {
            $express = new static();
            $express->sNo = $detail->sShipNo;
            $express->sStatus = "待查";
            $express->dNewDate = \Yii::$app->formatter->asDatetime(time());
            $express->dNextUp = \Yii::$app->formatter->asDatetime(time());//立即同步
            $express->sCompanyCode = ExpressCompany::getCompanyCode($detail->ShipCompanyID);
            $express->save();
        }
    }
}