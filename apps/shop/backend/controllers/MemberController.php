<?php

namespace myerm\shop\backend\controllers;


use myerm\backend\common\controllers\ObjectController;
use myerm\backend\system\models\SysUser;
use myerm\shop\common\models\Member;
use myerm\shop\common\models\SellerType;


/**
 * 会员控制器
 */
class MemberController extends ObjectController
{
    public function getNewFooterAppend()
    {
        $data = [];


        return $this->renderPartial('newfooter', $data);
    }

    public function getListButton()
    {
        $data = [];
        return $this->renderPartial('listbutton', $data);
    }

    public function beforeObjectEditSave($sysObject, $ID, $arrObjectData)
    {
        $supplier = \Yii::$app->supplier->findByMemberID($ID);
        if ($supplier) {
            $sysUser = SysUser::findOne($supplier->SysUserID);
            $sysUser->sLoginName = $arrObjectData['sMobile'];
            $sysUser->sMobile = $arrObjectData['sMobile'];
            $sysUser->sPassword = $arrObjectData['sPass'];
            $sysUser->save();
        }

        return parent::beforeObjectEditSave($sysObject, $ID, $arrObjectData); // TODO: Change the autogenerated stub
    }

    public function actionLevelup($ID)
    {
        if (!\Yii::$app->request->isPost) {
            $data = [];
            $data['agents'] = SellerType::find()->all();

            $seller = \Yii::$app->seller->findByID($ID);
            if ($seller) {
                return null;
            }

            return $this->renderPartial("levelup", $data);
        } else {
            if ($_POST['RecommendID'] == $ID) {
                return $this->asJson(['status' => false, 'msg' => '推荐人不能是自己']);
            } else {
                if ($_POST['RecommendID']) {
                    $seller = \Yii::$app->seller->findByID($_POST['RecommendID']);
                    if (!$seller) {
                        return $this->asJson(['status' => false, 'msg' => '推荐人不是代理商']);
                    }
                }
                \Yii::$app->seller->levelUp($ID, $_POST['RecommendID'], $_POST['TypeID']);
                return $this->asJson(['status' => true, 'msg' => '升级成功']);
            }
        }
    }

    public function getListTableLineButton($data)
    {
        return $this->renderPartial("button", ['data' => $data]);
    }

    public function actionJs()
    {
        return $this->renderPartial("js");
    }

    public function actionRecharge($ID)
    {
        if (\Yii::$app->request->isPost) {

            \Yii::$app->goldrecharge->recharge([
                'fPaid' => $_POST['action'] == 'plus' ? $_POST['fMoney'] : -$_POST['fMoney'],
                'fGive' => 0,
                'MemberID' => $ID,
                'NewUserID' => \Yii::$app->backendsession->SysUserID,
                'PaymentID' => 'backend',
                'dPayDate' => \Yii::$app->formatter->asDatetime(time()),
                'sNote' => $_POST['sNote'],
            ]);

            \Yii::$app->goldflow->change([
                'fChange' => $_POST['action'] == 'plus' ? $_POST['fMoney'] : -$_POST['fMoney'],
                'sName' => $_POST['action'] == 'plus' ? "后台充值" : "后台扣款",
                'MemberID' => $ID,
                'NewUserID' => \Yii::$app->backendsession->SysUserID,
                'TypeID' => $_POST['action'] == 'plus' ? 1 : 2
            ]);

            return $this->asJson(['status' => true]);
        } else {
            $data['member'] = Member::findOne($ID);
            return $this->renderPartial("recharge", $data);
        }
    }
}