<?php

namespace myerm\shop\backend\controllers;

use myerm\shop\common\models\Import;
use myerm\shop\common\models\PreOrder;

class ImportreturnController extends BackendController
{
    public function getHomeTabs()
    {
        $data = [];
        $data['arrList'] = [];

        $list = [];
        $list['ID'] = '1';
        $list['sName'] = '导入成功';
        $list['sKey'] = 'Main.Shop.Importreturn.List.All';
        $list['sLinkUrl'] = \Yii::$app->homeUrl . '/' . strtolower($this->sObjectName) . '/getlisttable?sListKey=Main.Shop.Importreturn.List.All&sTabID=success&sExtra=success';
        $data['arrList'][] = $list;

        $list['ID'] = '2';
        $list['sName'] = '导入失败';
        $list['sKey'] = 'Main.Shop.Importreturn.List.All';
        $list['sLinkUrl'] = \Yii::$app->homeUrl . '/' . strtolower($this->sObjectName) . '/getlisttable?sListKey=Main.Shop.Importreturn.List.All&sTabID=error&sExtra=error';
        $data['arrList'][] = $list;


        return $this->renderPartial('@app/common/views/hometabs', $data);
    }

    public function listDataConfig($sysList, $arrConfig)
    {
        if ($this->BuyerID) {
            $arrConfig['arrFlt'][] = [
                'sField' => 'buyerID',
                'sOper' => 'equal',
                'sValue' => $this->BuyerID,
                'sSQL' => "buyerID='" . $this->BuyerID . "'"
            ];
        }

        if ($_POST['sExtra'] == 'all') {

        } elseif ($_POST['sExtra'] == 'success') {
            $arrConfig['arrFlt'][] = ['sField' => 'status', 'sOper' => 'equal', 'sValue' => '1'];
        } elseif ($_POST['sExtra'] == 'error') {
            $arrConfig['arrFlt'][] = ['sField' => 'status', 'sOper' => 'equal', 'sValue' => '0'];
        } elseif ($_POST['sExtra'] == 'submit') {
            $arrConfig['arrFlt'][] = ['sField' => 'status', 'sOper' => 'equal', 'sValue' => '2'];
        }
        return parent::listDataConfig($sysList, $arrConfig);
    }

    public function afterEditSave()
    {
        $arr = $_POST['arrObjectData']['Shop/Import'];
        $data = PreOrder::checkImportRecord($arr);
        $import = Import::findOne($_POST['ID']);
        $import->cloudProductName = $data['cloudProductName'];
        $import->ShipTemplateID = $data['ShipTemplateID'];
        $import->sStandard = $data['sStandard'];//规格
        $import->sTaste = $data['sTaste'];//口味
        $import->sRemark = $data['sRemark'];
        $import->status = $data['status'];
        $import->bGroupProdcut = $data['bGroupProdcut'];
        $import->lGroupNum = $data['lGroupNum'];
        //收获地址
        $import->sAddressFinal = $data['sAddressFinal'];
        $import->ProvinceID = $data['ProvinceID'];
        $import->CityID = $data['CityID'];
        $import->AreaID = $data['AreaID'];
        $import->fPrice = $data['fPrice'];
        $import->save();
        //同名数据批量验证
        $arrImport = Import::find()->where(['orderName' => $import->orderName])->all();
        $key = $import->orderName . $import->sName . $import->sMobile . $import->ProvinceID . $import->CityID . $import->AreaID . $import->sAddressFinal;
        foreach ($arrImport as $value) {
            //订单编号+收件人+收人收件号码+省+市+区+详细地址
            $newKey = $value->orderName . $value->sName . $value->sMobile . $value->ProvinceID . $value->CityID . $value->AreaID . $value->sAddressFinal;
            if ($newKey != $key) {
                Import::updateAll(['status' => 0, 'sRemark' => '同一订单编号收货人不一致'], ['orderName' => $import->orderName]);
                //批量修改
                break;
            }
            //验证团购单
            if ($import->bGroupProdcut) {
                //验证是否满足条件
                Import::checkGroupProduct($import->orderName, $import->ShipTemplateID, $import->cloudProductName, $import->lGroupNum);
            }
        }
        return parent::afterEditSave(); // TODO: Change the autogenerated stub
    }

    public function getListButton()
    {
        $data = [];
        return $this->renderPartial('listbutton', $data);
    }

    public function actionSavepreorder()
    {
        $sSelectedID = $_REQUEST['sSelectedID'];
        PreOrder::savePrepOrder($sSelectedID, $this->BuyerID);
        $sRespone = json_encode(['bSuccess' => true, 'sMsg' => '提交成功，请刷新数据']);
        return "var ret = " . $sRespone;
    }
}


