<?php

namespace myerm\shop\backend\controllers;


use myerm\backend\common\controllers\ObjectController;
use myerm\backend\common\libs\File;
use myerm\backend\common\libs\NewID;
use myerm\backend\common\models\Session;
use myerm\backend\system\models\SysUser;
use myerm\shop\common\models\Supplier;
use myerm\shop\mobile\models\Product;


/**
 * 供应商
 * ============================================================================
 * 版权所有 2010-2017 三只象（厦门）网络科技有限公司，并保留所有权利。
 * 网站地址: http://www.myerm.cn
 * ----------------------------------------------------------------------------
 * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和
 * 使用；不允许对程序代码以任何形式任何目的的再发布。
 * ============================================================================
 * @author 陈鹭明  <lumingchen@qq.com>
 * @since 2017年9月20日 23:26:07
 * @version v1.0
 */
class SupplierController extends ObjectController
{
    public function formatListData($arrData)
    {
        foreach ($arrData as $lKey => $data) {
            $arrData[$lKey]['sUrl'] = "<a href='" . \myerm\shop\common\models\MallConfig::getValueByKey('sMallRootUrl') . "/shop0/supplier/detail?id=" . $data['lID'] . "' target='_blank'>点击链接进入页面</a>";
        }

        return parent::formatListData($arrData); // TODO: Change the autogenerated stub
    }


    public function editObjectFieldValidate($ID, $field, $value)
    {

        $ret = parent::editObjectFieldValidate($ID, $field, $value); // TODO: Change the autogenerated stub
        if ($ret['bSuccess'] && $field->sFieldAs == 'sName') {
            //编辑供应商时名称唯一性判断
            $supplier = Supplier::findOne(['sName' => $value]);

            if ($supplier->lID && $supplier->lID != $ID) {
                return ['bSuccess' => false, 'sFieldAs' => $field->sFieldAs, 'sMsg' => "该供应商名称已存在。"];
            }

        } elseif ($ret['bSuccess'] && $field->sFieldAs == 'sUserName') {
            //编辑供应商时登录名唯一性判断
            $supplier = Supplier::findOne(['sUserName' => $value]);
            $sysUser = SysUser::findOne(['sLoginName' => $value]);

            if (($supplier->lID && $supplier->lID != $ID) || ($sysUser->lID && $sysUser->lID != $supplier->SysUserID)) {
                return ['bSuccess' => false, 'sFieldAs' => $field->sFieldAs, 'sMsg' => "该登录名称已存在。"];
            }

        } elseif ($ret['bSuccess'] && $field->sFieldAs == 'sMobile') {
            //编辑供应商时手机号唯一性判断
            $supplier = Supplier::findOne(['sMobile' => $value]);

            if ($supplier->lID && $supplier->lID != $ID) {
                return ['bSuccess' => false, 'sFieldAs' => $field->sFieldAs, 'sMsg' => "该手机号已存在。"];
            }
        }

        return $ret;
    }

    public function beforeDel($arrData)
    {
        foreach ($arrData as $data) {
            $supplier = Supplier::findByID($data[$this->sysObject->sIDField]);
            if ($supplier->lProductNum > 0) {
                throw new \yii\base\UserException('供应商【'.$supplier['sName'].'】底下有商品，不可删除。');
            } else {
                //删除人员表数据
                SysUser::findOne($supplier->SysUserID)->delete();
                //删除session
                $session = Session::findOne(['SysUserID' => $supplier->SysUserID]);
                if($session){
                    $session->delete();
                }
            }
        }
    }

    public function newObjectFieldValidate($field, $value)
    {
        $ret = parent::newObjectFieldValidate($field, $value);
        if ($ret['bSuccess'] && $field->sFieldAs == 'sName') {
            //新增供应商时名称唯一性判断
            $supplier = Supplier::findOne(['sName' => $value]);

            if ($supplier->lID) {
                return ['bSuccess' => false, 'sFieldAs' => $field->sFieldAs, 'sMsg' => "该供应商名称已存在。"];
            }

        } elseif ($ret['bSuccess'] && $field->sFieldAs == 'sUserName') {
            //新增供应商时登录名唯一性判断
            $supplier = Supplier::findOne(['sUserName' => $value]);
            $sysUser = SysUser::findOne(['sLoginName' => $value]);

            if ($supplier->lID || $sysUser->lID) {
                return ['bSuccess' => false, 'sFieldAs' => $field->sFieldAs, 'sMsg' => "该登录名称已存在。"];
            }

        } elseif ($ret['bSuccess'] && $field->sFieldAs == 'sMobile') {
            //新增供应商时手机号唯一性判断
            $supplier = Supplier::findOne(['sMobile' => $value]);

            if ($supplier->lID) {
                return ['bSuccess' => false, 'sFieldAs' => $field->sFieldAs, 'sMsg' => "该手机号已存在。"];
            }
        }

        return $ret;
    }


    public function beforeObjectEditSave($sysObject, $ID, $arrObjectData)
    {
        if ($_POST['arrObjectData']['Shop/Supplier']['sPicBase64']) {
            $arrFileInfo = File::parseImageFromBase64($_POST['arrObjectData']['Shop/Supplier']['sPicBase64']);

            $sFileName = NewID::make() . "." . $arrFileInfo[0];
            $arrObjectData['sPicPath'] = File::putContentToUploadDir($sFileName, $arrFileInfo[1]);
        }

        $supplier = \Yii::$app->supplier->findByID($ID);

        if ($supplier->SysUserID) {
            $sysUser = SysUser::findOne($supplier->SysUserID);
        } else {
            $sysUser = new SysUser();
            $sysUser->ID = NewID::make();
            $sysUser->dNewDate = \Yii::$app->formatter->asDatetime(time());
            $sysUser->bActive = 1;
            $sysUser->SysRoleID = 3;
            $sysUser->SysSolutionID = 'SupplierSolution';
            $sysUser->LanguageID = 'zh-CN';
        }

        $sysUser->sName = $arrObjectData['sName'];
        $sysUser->dEditDate = \Yii::$app->formatter->asDatetime(time());
        $sysUser->sLoginName = $arrObjectData['sUserName'];
        $sysUser->sMobile = $arrObjectData['sMobile'];
        $sysUser->sPassword = $arrObjectData['sPassword'];
        $sysUser->save();

        $arrObjectData['SysUserID'] = $sysUser->lID;

        return parent::beforeObjectNewSave($sysObject, $arrObjectData); // TODO: Change the autogenerated stub
    }

    public function beforeObjectNewSave($sysObject, $arrObjectData)
    {

        if ($_POST['arrObjectData']['Shop/Supplier']['sPicBase64']) {
            $arrFileInfo = File::parseImageFromBase64($_POST['arrObjectData']['Shop/Supplier']['sPicBase64']);

            $sFileName = NewID::make() . "." . $arrFileInfo[0];
            $arrObjectData['sPicPath'] = File::putContentToUploadDir($sFileName, $arrFileInfo[1]);
        }
        return parent::beforeObjectNewSave($sysObject, $arrObjectData); // TODO: Change the autogenerated stub
    }

    public function afterObjectNewSave($sysObject, $ID)
    {
        $db = $sysObject->dbconn;
        $supplier = $db->createCommand("SELECT * FROM Supplier WHERE lID='$ID'")->queryOne();

        $sysUser = new SysUser();
        $sysUser->ID = NewID::make();
        $sysUser->sName = $supplier['sName'];
        $sysUser->dNewDate = \Yii::$app->formatter->asDatetime(time());
        $sysUser->dEditDate = \Yii::$app->formatter->asDatetime(time());
        $sysUser->bActive = 1;
        $sysUser->SysRoleID = 3;
        $sysUser->sLoginName = $supplier['sUserName'];
        $sysUser->sPassword = $supplier['sPassword'];
        $sysUser->sMobile = $supplier['sMobile'];
        $sysUser->SysSolutionID = 'SupplierSolution';
        $sysUser->LanguageID = 'zh-CN';
        $sysUser->save();

        $db->createCommand("UPDATE Supplier SET SysUserID='" . $sysUser->lID . "' WHERE lID='$ID'")->execute();

        return parent::afterObjectNewSave($sysObject, $ID); // TODO: Change the autogenerated stub
    }

    public function actionView()
    {
        return parent::actionView(); // TODO: Change the autogenerated stub
    }


//    新建、编辑供应商时字段字数限制移除 by hcc on 2018/7/6
//    public function getNewFooterAppend()
//    {
//        $data = [];
//        return $this->renderPartial('newfooter', $data);
//    }


}