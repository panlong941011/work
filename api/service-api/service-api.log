2019-05-20 10:31:31 main The following profiles are active: dev 
2019-05-20 10:31:34 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 10:31:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878 
2019-05-20 10:31:35 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 10:31:36 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 10:31:36 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 10:31:36 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8d4734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 10:31:36 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28a74a31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 10:31:37 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 10:31:41 main Using default implementation for ThreadExecutor 
2019-05-20 10:31:41 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 10:31:41 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 10:31:41 main RAMJobStore initialized. 
2019-05-20 10:31:41 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 10:31:41 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 10:31:41 main Quartz scheduler version: 2.3.0 
2019-05-20 10:31:41 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@60ae7cf2 
2019-05-20 10:31:42 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 10:31:42 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 10:31:42 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 10:31:42 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 10:31:42 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 10:31:42 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 10:31:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878 
2019-05-20 10:31:42 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 10:31:42 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 10:31:42 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 10:31:42 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 10:31:42 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 10:31:42 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 10:31:42 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 10:31:42 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 10:31:42 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 10:31:45 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 10:31:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878] and template loader path [classpath:/templates/] 
2019-05-20 10:31:45 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 10:31:45 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 10:31:45 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 10:31:45 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 10:31:45 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 10:31:45 main Starting beans in phase 0 
2019-05-20 10:31:45 main Starting beans in phase 2147483647 
2019-05-20 10:31:45 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 10:31:45 main Started AreaControllerTest in 16.649 seconds (JVM running for 18.647) 
2019-05-20 10:31:46 main Initializing Spring FrameworkServlet '' 
2019-05-20 10:31:46 main FrameworkServlet '': initialization started 
2019-05-20 10:31:46 main FrameworkServlet '': initialization completed in 25 ms 
2019-05-20 10:31:46 main 请求url:http://localhost/v1/area/list 
2019-05-20 10:31:46 main 请求参数:[null] 
2019-05-20 10:31:46 main ==>  Preparing: SELECT ID,sName,UpID,sType,bActive,sPostCode FROM Area WHERE 1=1 and UpID is null  
2019-05-20 10:31:46 main ==> Parameters:  
2019-05-20 10:31:46 main <==      Total: 260 
2019-05-20 10:31:46 main 返回数据:{"data":[{"bActive":1,"id":"1","sName":"中国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"10","sName":"安圭拉岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"100","sName":"以色列","sPostCode":"","sType":"Country"},{"bActive":1,"id":"101","sName":"意大利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"102","sName":"科特迪瓦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"103","sName":"牙买加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"104","sName":"日本","sPostCode":"","sType":"Country"},{"bActive":1,"id":"105","sName":"泽西岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"106","sName":"约旦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"107","sName":"柬埔塞","sPostCode":"","sType":"Country"},{"bActive":1,"id":"108","sName":"哈萨克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"109","sName":"肯尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"11","sName":"南极","sPostCode":"","sType":"Country"},{"bActive":1,"id":"110","sName":"基里巴斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"111","sName":"科威特","sPostCode":"","sType":"Country"},{"bActive":1,"id":"112","sName":"吉尔吉斯斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"113","sName":"老挝","sPostCode":"","sType":"Country"},{"bActive":1,"id":"114","sName":"拉脱维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"115","sName":"黎巴嫩","sPostCode":"","sType":"Country"},{"bActive":1,"id":"116","sName":"莱索托","sPostCode":"","sType":"Country"},{"bActive":1,"id":"117","sName":"利比里亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"118","sName":"利比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"119","sName":"列支敦士登","sPostCode":"","sType":"Country"},{"bActive":1,"id":"12","sName":"安提瓜和巴布达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"120","sName":"立陶宛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"121","sName":"卢森堡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"122","sName":"马其顿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"123","sName":"马达加斯加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"124","sName":"马拉维","sPostCode":"","sType":"Country"},{"bActive":1,"id":"125","sName":"马来西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"126","sName":"马尔代夫","sPostCode":"","sType":"Country"},{"bActive":1,"id":"127","sName":"马里","sPostCode":"","sType":"Country"},{"bActive":1,"id":"128","sName":"马耳他","sPostCode":"","sType":"Country"},{"bActive":1,"id":"129","sName":"马绍尔群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"13","sName":"阿根廷","sPostCode":"","sType":"Country"},{"bActive":1,"id":"130","sName":"马提尼克(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"131","sName":"毛里塔尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"132","sName":"毛里求斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"133","sName":"马约特岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"134","sName":"墨西哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"135","sName":"密克罗尼西亚(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"136","sName":"中途岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"137","sName":"摩纳哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"138","sName":"蒙古","sPostCode":"","sType":"Country"},{"bActive":1,"id":"139","sName":"黑山","sPostCode":"","sType":"Country"},{"bActive":1,"id":"14","sName":"亚美尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"140","sName":"蒙特塞拉特岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"141","sName":"摩洛哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"142","sName":"莫桑比克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"143","sName":"缅甸","sPostCode":"","sType":"Country"},{"bActive":1,"id":"144","sName":"纳米比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"145","sName":"瑙鲁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"146","sName":"尼泊尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"147","sName":"荷兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"148","sName":"荷属安的列斯群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"149","sName":"新喀里多尼亚群岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"15","sName":"阿鲁巴岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"150","sName":"新西兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"151","sName":"尼加拉瓜","sPostCode":"","sType":"Country"},{"bActive":1,"id":"152","sName":"尼日尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"153","sName":"尼日利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"154","sName":"纽埃岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"155","sName":"诺福克岛(澳)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"156","sName":"朝鲜","sPostCode":"","sType":"Country"},{"bActive":1,"id":"157","sName":"马里亚纳群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"158","sName":"挪威","sPostCode":"","sType":"Country"},{"bActive":1,"id":"159","sName":"阿曼","sPostCode":"","sType":"Country"},{"bActive":1,"id":"16","sName":"澳大利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"160","sName":"巴基斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"161","sName":"帕劳(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"162","sName":"巴拿马","sPostCode":"","sType":"Country"},{"bActive":1,"id":"163","sName":"巴布亚新几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"164","sName":"巴拉圭","sPostCode":"","sType":"Country"},{"bActive":1,"id":"165","sName":"秘鲁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"166","sName":"菲律宾","sPostCode":"","sType":"Country"},{"bActive":1,"id":"167","sName":"波兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"168","sName":"葡萄牙","sPostCode":"","sType":"Country"},{"bActive":1,"id":"169","sName":"波多黎各(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"17","sName":"奥地利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"170","sName":"卡塔尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"171","sName":"摩尔多瓦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"172","sName":"留尼汪岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"173","sName":"罗马尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"174","sName":"俄罗斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"175","sName":"卢旺达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"176","sName":"阿森松(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"177","sName":"圣赫勒拿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"178","sName":"圣克里斯托弗和尼维斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"179","sName":"圣卢西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"18","sName":"阿塞拜疆","sPostCode":"","sType":"Country"},{"bActive":1,"id":"180","sName":"圣皮埃尔岛及密克隆岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"181","sName":"圣文森特岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"182","sName":"西萨摩亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"183","sName":"圣马力诺","sPostCode":"","sType":"Country"},{"bActive":1,"id":"184","sName":"圣多美和普林西比","sPostCode":"","sType":"Country"},{"bActive":1,"id":"185","sName":"沙特阿拉伯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"186","sName":"塞内加尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"187","sName":"塞尔维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"188","sName":"塞舌尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"189","sName":"塞拉利昂","sPostCode":"","sType":"Country"},{"bActive":1,"id":"19","sName":"巴林","sPostCode":"","sType":"Country"},{"bActive":1,"id":"190","sName":"新加坡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"191","sName":"圣马丁(荷)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"192","sName":"斯洛伐克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"193","sName":"斯洛文尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"194","sName":"所罗门群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"195","sName":"索马里","sPostCode":"","sType":"Country"},{"bActive":1,"id":"196","sName":"南非","sPostCode":"","sType":"Country"},{"bActive":1,"id":"197","sName":"南乔治亚与南桑威奇群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"198","sName":"韩国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"199","sName":"西班牙","sPostCode":"","sType":"Country"},{"bActive":1,"id":"2","sName":"阿富汗","sPostCode":"","sType":"Country"},{"bActive":1,"id":"20","sName":"根西岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"200","sName":"斯里兰卡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"201","sName":"苏丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"202","sName":"苏里南","sPostCode":"","sType":"Country"},{"bActive":1,"id":"203","sName":"斯瓦尔巴群岛(挪)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"204","sName":"斯威士兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"205","sName":"瑞典","sPostCode":"","sType":"Country"},{"bActive":1,"id":"206","sName":"瑞士","sPostCode":"","sType":"Country"},{"bActive":1,"id":"207","sName":"叙利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"208","sName":"塔吉克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"209","sName":"泰国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"21","sName":"孟加拉国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"210","sName":"巴哈马国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"211","sName":"梵蒂冈","sPostCode":"","sType":"Country"},{"bActive":1,"id":"212","sName":"东帝汶","sPostCode":"","sType":"Country"},{"bActive":1,"id":"213","sName":"多哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"214","sName":"托克劳群岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"215","sName":"汤加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"216","sName":"特立尼达和多巴哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"217","sName":"突尼斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"218","sName":"土耳其","sPostCode":"","sType":"Country"},{"bActive":1,"id":"219","sName":"土库曼斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"22","sName":"巴巴多斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"220","sName":"特克斯和凯科斯群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"221","sName":"图瓦卢","sPostCode":"","sType":"Country"},{"bActive":1,"id":"222","sName":"乌干达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"223","sName":"乌克兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"224","sName":"阿拉伯联合酋长国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"225","sName":"英国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"226","sName":"坦桑尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"227","sName":"美国本土外小岛屿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"228","sName":"美国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"229","sName":"乌拉圭","sPostCode":"","sType":"Country"},{"bActive":1,"id":"23","sName":"白俄罗斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"230","sName":"乌兹别克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"231","sName":"瓦努阿图","sPostCode":"","sType":"Country"},{"bActive":1,"id":"232","sName":"委内瑞拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"233","sName":"越南","sPostCode":"","sType":"Country"},{"bActive":1,"id":"234","sName":"维尔京群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"235","sName":"维尔京群岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"236","sName":"瓦里斯和富士那群岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"237","sName":"西撒哈拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"238","sName":"也门","sPostCode":"","sType":"Country"},{"bActive":1,"id":"239","sName":"南斯拉夫","sPostCode":"","sType":"Country"},{"bActive":1,"id":"24","sName":"比利时","sPostCode":"","sType":"Country"},{"bActive":1,"id":"240","sName":"赞比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"241","sName":"桑给巴尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"242","sName":"津巴布韦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"243","sName":"文莱","sPostCode":"","sType":"Country"},{"bActive":1,"id":"244","sName":"尼维斯岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"245","sName":"南苏丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"246","sName":"加勒比荷兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"247","sName":"布韦岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"248","sName":"赫德岛和麦克唐纳群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"249","sName":"英属印度洋领地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"25","sName":"伯利兹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"250","sName":"皮特凯恩群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"251","sName":"巴勒斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"252","sName":"法属南部和南极领地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"253","sName":"阿森松岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"254","sName":"圣巴泰勒米岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"255","sName":"法国本土","sPostCode":"","sType":"Country"},{"bActive":1,"id":"256","sName":"奥尔德尼岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"257","sName":"库拉索","sPostCode":"","sType":"Country"},{"bActive":1,"id":"258","sName":"科索沃","sPostCode":"","sType":"Country"},{"bActive":1,"id":"259","sName":"圣马丁岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"26","sName":"贝宁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"260","sName":"苏格兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"27","sName":"百慕大群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"28","sName":"不丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"29","sName":"玻利维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"3","sName":"奥兰群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"30","sName":"波斯尼亚和黑塞哥维那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"31","sName":"博茨瓦纳","sPostCode":"","sType":"Country"},{"bActive":1,"id":"32","sName":"巴西","sPostCode":"","sType":"Country"},{"bActive":1,"id":"33","sName":"保加利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"34","sName":"布基纳法索","sPostCode":"","sType":"Country"},{"bActive":1,"id":"35","sName":"布隆迪","sPostCode":"","sType":"Country"},{"bActive":1,"id":"36","sName":"喀麦隆","sPostCode":"","sType":"Country"},{"bActive":1,"id":"37","sName":"加拿大","sPostCode":"","sType":"Country"},{"bActive":1,"id":"38","sName":"加那利群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"39","sName":"佛得角","sPostCode":"","sType":"Country"},{"bActive":1,"id":"4","sName":"阿拉斯加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"40","sName":"开曼群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"41","sName":"中非","sPostCode":"","sType":"Country"},{"bActive":1,"id":"42","sName":"乍得","sPostCode":"","sType":"Country"},{"bActive":1,"id":"43","sName":"智利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"44","sName":"圣诞岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"45","sName":"科科斯岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"46","sName":"哥伦比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"47","sName":"科摩罗","sPostCode":"","sType":"Country"},{"bActive":1,"id":"48","sName":"刚果","sPostCode":"","sType":"Country"},{"bActive":1,"id":"49","sName":"科克群岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"5","sName":"阿尔巴尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"50","sName":"哥斯达黎加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"51","sName":"克罗地亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"52","sName":"古巴","sPostCode":"","sType":"Country"},{"bActive":1,"id":"53","sName":"塞浦路斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"54","sName":"捷克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"55","sName":"刚果(金)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"56","sName":"丹麦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"57","sName":"迪戈加西亚岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"58","sName":"吉布提","sPostCode":"","sType":"Country"},{"bActive":1,"id":"59","sName":"多米尼克国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"6","sName":"阿尔及利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"60","sName":"多米尼加共和国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"61","sName":"厄瓜多尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"62","sName":"埃及","sPostCode":"","sType":"Country"},{"bActive":1,"id":"63","sName":"萨尔瓦多","sPostCode":"","sType":"Country"},{"bActive":1,"id":"64","sName":"赤道几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"65","sName":"厄立特里亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"66","sName":"爱沙尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"67","sName":"埃塞俄比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"68","sName":"福克兰群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"69","sName":"法罗群岛(丹)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"7","sName":"东萨摩亚(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"70","sName":"斐济","sPostCode":"","sType":"Country"},{"bActive":1,"id":"71","sName":"芬兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"72","sName":"法国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"73","sName":"法属波里尼西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"74","sName":"加蓬","sPostCode":"","sType":"Country"},{"bActive":1,"id":"75","sName":"冈比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"76","sName":"格鲁吉亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"77","sName":"德国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"78","sName":"加纳","sPostCode":"","sType":"Country"},{"bActive":1,"id":"79","sName":"直布罗陀(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"8","sName":"安道尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"80","sName":"希腊","sPostCode":"","sType":"Country"},{"bActive":1,"id":"81","sName":"格陵兰岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"82","sName":"格林纳达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"83","sName":"瓜德罗普岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"84","sName":"关岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"85","sName":"危地马拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"86","sName":"几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"87","sName":"几内亚比绍","sPostCode":"","sType":"Country"},{"bActive":1,"id":"88","sName":"法属圭亚那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"89","sName":"圭亚那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"9","sName":"安哥拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"90","sName":"海地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"91","sName":"洪都拉斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"92","sName":"匈牙利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"93","sName":"冰岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"94","sName":"印度","sPostCode":"","sType":"Country"},{"bActive":1,"id":"95","sName":"印度尼西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"96","sName":"伊郎","sPostCode":"","sType":"Country"},{"bActive":1,"id":"97","sName":"伊拉克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"98","sName":"爱尔兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"99","sName":"马恩岛(英)","sPostCode":"","sType":"Country"}],"message":"操作成功","status":10000} 
2019-05-20 10:31:46 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 10:31:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878 
2019-05-20 10:31:46 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 10:31:46 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 10:31:46 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 10:31:46 Thread-13 Stopping beans in phase 0 
2019-05-20 10:31:46 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 10:31:47 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 10:31:47 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 10:31:47 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 10:31:47 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 10:31:47 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 10:31:47 Thread-13 Disable delta property : false 
2019-05-20 10:31:47 Thread-13 Single vip registry refresh property : null 
2019-05-20 10:31:47 Thread-13 Force full registry fetch : false 
2019-05-20 10:31:47 Thread-13 Application is null : false 
2019-05-20 10:31:47 Thread-13 Registered Applications size is zero : true 
2019-05-20 10:31:47 Thread-13 Application version is -1: true 
2019-05-20 10:31:47 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 10:31:47 Thread-13 The response status is 200 
2019-05-20 10:31:47 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 10:31:47 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 10:31:47 Thread-13 Discovery Client initialized at timestamp 1558319507918 with initial instances count: 0 
2019-05-20 10:31:47 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 10:31:50 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 10:31:50 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 10:31:50 Thread-13 Unregistering ... 
2019-05-20 10:31:50 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 10:31:50 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 10:31:51 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 10:31:51 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 10:31:51 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 10:31:51 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 10:59:27 main The following profiles are active: dev 
2019-05-20 10:59:30 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@28f9fedd: startup date [Mon May 20 10:59:30 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37b72ea 
2019-05-20 10:59:32 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 10:59:33 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 10:59:33 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 10:59:33 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$925ca6e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 10:59:33 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae76a9de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 10:59:35 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 11:24:39 main The following profiles are active: dev 
2019-05-20 11:24:42 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4463d9d3: startup date [Mon May 20 11:24:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@83298d7 
2019-05-20 11:24:43 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 11:24:44 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 11:24:44 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 11:24:45 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$587b0ccf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 11:24:45 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74950fcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 11:24:46 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 11:24:56 main Using default implementation for ThreadExecutor 
2019-05-20 11:24:56 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 11:24:56 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 11:24:56 main RAMJobStore initialized. 
2019-05-20 11:24:56 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 11:24:56 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 11:24:56 main Quartz scheduler version: 2.3.0 
2019-05-20 11:24:56 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1131aead 
2019-05-20 11:24:57 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 11:24:57 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 11:24:57 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 11:24:57 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 11:24:57 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:24:57 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4463d9d3: startup date [Mon May 20 11:24:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@83298d7 
2019-05-20 11:24:57 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 11:24:57 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 11:24:57 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 11:24:57 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 11:24:57 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:24:57 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 11:24:57 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 11:24:57 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:24:57 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:25:00 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@4463d9d3: startup date [Mon May 20 11:24:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@83298d7] and template loader path [classpath:/templates/] 
2019-05-20 11:25:00 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 11:25:00 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 11:25:00 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 11:25:00 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 11:25:00 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 11:25:00 main Starting beans in phase 0 
2019-05-20 11:25:00 main Starting beans in phase 2147483647 
2019-05-20 11:25:00 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 11:25:00 main Started AreaControllerTest in 23.265 seconds (JVM running for 26.015) 
2019-05-20 11:25:01 main Initializing Spring FrameworkServlet '' 
2019-05-20 11:25:01 main FrameworkServlet '': initialization started 
2019-05-20 11:25:01 main FrameworkServlet '': initialization completed in 25 ms 
2019-05-20 11:25:01 main Initializing Spring FrameworkServlet '' 
2019-05-20 11:25:01 main FrameworkServlet '': initialization started 
2019-05-20 11:25:01 main FrameworkServlet '': initialization completed in 7 ms 
2019-05-20 11:25:01 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@4463d9d3: startup date [Mon May 20 11:24:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@83298d7 
2019-05-20 11:25:01 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 11:25:01 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 11:25:01 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 11:25:01 Thread-13 Stopping beans in phase 0 
2019-05-20 11:25:01 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 11:25:02 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 11:25:02 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 11:25:02 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 11:25:02 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 11:25:03 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 11:25:03 Thread-13 Disable delta property : false 
2019-05-20 11:25:03 Thread-13 Single vip registry refresh property : null 
2019-05-20 11:25:03 Thread-13 Force full registry fetch : false 
2019-05-20 11:25:03 Thread-13 Application is null : false 
2019-05-20 11:25:03 Thread-13 Registered Applications size is zero : true 
2019-05-20 11:25:03 Thread-13 Application version is -1: true 
2019-05-20 11:25:03 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 11:25:04 Thread-13 The response status is 200 
2019-05-20 11:25:04 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 11:25:04 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 11:25:04 Thread-13 Discovery Client initialized at timestamp 1558322704324 with initial instances count: 0 
2019-05-20 11:25:04 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 11:25:05 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 11:25:05 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 11:25:06 scheduler_Worker-1 ==>  Preparing: DELETE FROM AccessToken WHERE dNewDate < ?  
2019-05-20 11:25:06 scheduler_Worker-1 ==> Parameters: 2019-05-13 11:25:05.967(Timestamp) 
2019-05-20 11:25:06 scheduler_Worker-1 <==    Updates: 0 
2019-05-20 11:25:07 Thread-13 Unregistering ... 
2019-05-20 11:25:07 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 11:25:07 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 11:25:07 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 11:25:07 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 11:25:07 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 11:25:07 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 11:26:34 main The following profiles are active: dev 
2019-05-20 11:26:38 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ad5923a: startup date [Mon May 20 11:26:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c51bb7 
2019-05-20 11:26:39 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 11:26:39 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 11:26:39 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 11:26:40 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16db4560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 11:26:40 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$32f5485d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 11:26:41 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 11:26:46 main Using default implementation for ThreadExecutor 
2019-05-20 11:26:46 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 11:26:46 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 11:26:46 main RAMJobStore initialized. 
2019-05-20 11:26:46 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 11:26:46 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 11:26:46 main Quartz scheduler version: 2.3.0 
2019-05-20 11:26:46 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7d977a20 
2019-05-20 11:26:46 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 11:26:46 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 11:26:46 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 11:26:46 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 11:26:46 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:26:47 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ad5923a: startup date [Mon May 20 11:26:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c51bb7 
2019-05-20 11:26:47 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 11:26:47 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 11:26:47 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 11:26:47 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 11:26:47 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:26:47 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 11:26:47 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 11:26:47 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:26:47 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:26:49 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@6ad5923a: startup date [Mon May 20 11:26:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c51bb7] and template loader path [classpath:/templates/] 
2019-05-20 11:26:49 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 11:26:50 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 11:26:50 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 11:26:50 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 11:26:50 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 11:26:50 main Starting beans in phase 0 
2019-05-20 11:26:50 main Starting beans in phase 2147483647 
2019-05-20 11:26:50 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 11:26:50 main Started AreaControllerTest in 17.093 seconds (JVM running for 18.383) 
2019-05-20 11:26:50 main Initializing Spring FrameworkServlet '' 
2019-05-20 11:26:50 main FrameworkServlet '': initialization started 
2019-05-20 11:26:50 main FrameworkServlet '': initialization completed in 27 ms 
2019-05-20 11:26:50 main Initializing Spring FrameworkServlet '' 
2019-05-20 11:26:50 main FrameworkServlet '': initialization started 
2019-05-20 11:26:50 main FrameworkServlet '': initialization completed in 6 ms 
2019-05-20 11:26:50 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@6ad5923a: startup date [Mon May 20 11:26:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c51bb7 
2019-05-20 11:26:50 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 11:26:50 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 11:26:50 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 11:26:50 Thread-15 Stopping beans in phase 0 
2019-05-20 11:26:50 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 11:26:50 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 11:26:50 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 11:26:51 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 11:26:51 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 11:26:51 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 11:26:51 Thread-15 Disable delta property : false 
2019-05-20 11:26:51 Thread-15 Single vip registry refresh property : null 
2019-05-20 11:26:51 Thread-15 Force full registry fetch : false 
2019-05-20 11:26:51 Thread-15 Application is null : false 
2019-05-20 11:26:51 Thread-15 Registered Applications size is zero : true 
2019-05-20 11:26:51 Thread-15 Application version is -1: true 
2019-05-20 11:26:51 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 11:26:51 Thread-15 The response status is 200 
2019-05-20 11:26:51 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 11:26:51 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 11:26:51 Thread-15 Discovery Client initialized at timestamp 1558322811786 with initial instances count: 0 
2019-05-20 11:26:51 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 11:26:54 Thread-15 Unregistering ... 
2019-05-20 11:26:54 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 11:26:54 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 11:26:54 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 11:26:54 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 11:26:54 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 11:26:54 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 11:41:31 main The following profiles are active: dev 
2019-05-20 11:41:34 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 11:41:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d 
2019-05-20 11:41:35 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 11:41:36 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 11:41:36 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 11:41:36 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1d63d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 11:41:37 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$863766d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 11:41:38 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 11:41:42 main Using default implementation for ThreadExecutor 
2019-05-20 11:41:42 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 11:41:42 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 11:41:42 main RAMJobStore initialized. 
2019-05-20 11:41:42 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 11:41:42 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 11:41:42 main Quartz scheduler version: 2.3.0 
2019-05-20 11:41:42 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@20a9f5fb 
2019-05-20 11:41:42 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 11:41:42 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 11:41:42 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 11:41:42 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 11:41:43 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:41:43 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 11:41:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d 
2019-05-20 11:41:43 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 11:41:43 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 11:41:43 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 11:41:43 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 11:41:43 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 11:41:43 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 11:41:43 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 11:41:43 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:41:43 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 11:41:45 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 11:41:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d] and template loader path [classpath:/templates/] 
2019-05-20 11:41:45 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 11:41:45 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 11:41:45 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 11:41:45 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 11:41:45 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 11:41:45 main Starting beans in phase 0 
2019-05-20 11:41:45 main Starting beans in phase 2147483647 
2019-05-20 11:41:45 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 11:41:45 main Started AreaControllerTest in 16.44 seconds (JVM running for 17.68) 
2019-05-20 11:41:46 main Initializing Spring FrameworkServlet '' 
2019-05-20 11:41:46 main FrameworkServlet '': initialization started 
2019-05-20 11:41:46 main FrameworkServlet '': initialization completed in 27 ms 
2019-05-20 11:41:46 main Initializing Spring FrameworkServlet '' 
2019-05-20 11:41:46 main FrameworkServlet '': initialization started 
2019-05-20 11:41:46 main FrameworkServlet '': initialization completed in 6 ms 
2019-05-20 11:41:46 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 11:41:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d 
2019-05-20 11:41:46 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 11:41:46 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 11:41:46 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 11:41:46 Thread-13 Stopping beans in phase 0 
2019-05-20 11:41:46 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 11:41:46 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 11:41:46 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 11:41:46 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 11:41:46 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 11:41:46 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 11:41:47 Thread-13 Disable delta property : false 
2019-05-20 11:41:47 Thread-13 Single vip registry refresh property : null 
2019-05-20 11:41:47 Thread-13 Force full registry fetch : false 
2019-05-20 11:41:47 Thread-13 Application is null : false 
2019-05-20 11:41:47 Thread-13 Registered Applications size is zero : true 
2019-05-20 11:41:47 Thread-13 Application version is -1: true 
2019-05-20 11:41:47 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 11:41:47 Thread-13 The response status is 200 
2019-05-20 11:41:47 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 11:41:47 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 11:41:47 Thread-13 Discovery Client initialized at timestamp 1558323707439 with initial instances count: 1 
2019-05-20 11:41:47 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 11:41:50 Thread-13 Unregistering ... 
2019-05-20 11:41:50 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 11:41:50 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 11:41:50 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 11:41:50 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 11:41:50 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 11:41:50 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 13:47:52 main The following profiles are active: dev 
2019-05-20 13:47:56 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@61533ae: startup date [Mon May 20 13:47:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65a4798f 
2019-05-20 13:47:57 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 13:47:59 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 13:47:59 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 13:47:59 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$35cd514] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 13:48:00 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1f76d811] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 13:48:01 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 13:48:06 main Using default implementation for ThreadExecutor 
2019-05-20 13:48:06 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 13:48:06 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 13:48:06 main RAMJobStore initialized. 
2019-05-20 13:48:06 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 13:48:06 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 13:48:06 main Quartz scheduler version: 2.3.0 
2019-05-20 13:48:06 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@165aa43a 
2019-05-20 13:48:06 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 13:48:06 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 13:48:06 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 13:48:06 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 13:48:06 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 13:48:06 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@61533ae: startup date [Mon May 20 13:47:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65a4798f 
2019-05-20 13:48:07 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 13:48:07 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 13:48:07 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 13:48:07 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 13:48:07 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:48:07 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 13:48:07 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 13:48:07 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 13:48:07 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 13:48:09 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@61533ae: startup date [Mon May 20 13:47:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65a4798f] and template loader path [classpath:/templates/] 
2019-05-20 13:48:09 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 13:48:09 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 13:48:10 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 13:48:10 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 13:48:10 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 13:48:10 main Starting beans in phase 0 
2019-05-20 13:48:10 main Starting beans in phase 2147483647 
2019-05-20 13:48:10 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 13:48:10 main Started AreaControllerTest in 19.474 seconds (JVM running for 21.949) 
2019-05-20 13:48:10 main Initializing Spring FrameworkServlet '' 
2019-05-20 13:48:10 main FrameworkServlet '': initialization started 
2019-05-20 13:48:10 main FrameworkServlet '': initialization completed in 24 ms 
2019-05-20 13:48:10 main Initializing Spring FrameworkServlet '' 
2019-05-20 13:48:10 main FrameworkServlet '': initialization started 
2019-05-20 13:48:10 main FrameworkServlet '': initialization completed in 6 ms 
2019-05-20 13:48:10 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@61533ae: startup date [Mon May 20 13:47:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65a4798f 
2019-05-20 13:48:10 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 13:48:10 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 13:48:10 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 13:48:10 Thread-13 Stopping beans in phase 0 
2019-05-20 13:48:10 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 13:48:10 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 13:48:10 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 13:48:11 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 13:48:11 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 13:48:11 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 13:48:11 Thread-13 Disable delta property : false 
2019-05-20 13:48:11 Thread-13 Single vip registry refresh property : null 
2019-05-20 13:48:11 Thread-13 Force full registry fetch : false 
2019-05-20 13:48:11 Thread-13 Application is null : false 
2019-05-20 13:48:11 Thread-13 Registered Applications size is zero : true 
2019-05-20 13:48:11 Thread-13 Application version is -1: true 
2019-05-20 13:48:11 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 13:48:11 Thread-13 The response status is 200 
2019-05-20 13:48:11 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 13:48:11 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 13:48:11 Thread-13 Discovery Client initialized at timestamp 1558331291675 with initial instances count: 0 
2019-05-20 13:48:11 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 13:48:14 Thread-13 Unregistering ... 
2019-05-20 13:48:14 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 13:48:14 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 13:48:14 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 13:48:14 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 13:48:14 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 13:48:14 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 13:50:58 main The following profiles are active: dev 
2019-05-20 13:51:01 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@732bb66d: startup date [Mon May 20 13:51:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@773f7880 
2019-05-20 13:51:03 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 13:51:04 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 13:51:04 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 13:51:04 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bcdbc26e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 13:51:05 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d8f5c56b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 13:51:06 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 13:51:11 main Using default implementation for ThreadExecutor 
2019-05-20 13:51:11 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 13:51:11 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 13:51:11 main RAMJobStore initialized. 
2019-05-20 13:51:11 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 13:51:11 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 13:51:11 main Quartz scheduler version: 2.3.0 
2019-05-20 13:51:11 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@760a2b6e 
2019-05-20 13:51:12 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 13:51:12 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 13:51:12 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 13:51:12 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 13:51:12 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 13:51:12 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@732bb66d: startup date [Mon May 20 13:51:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@773f7880 
2019-05-20 13:51:12 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 13:51:12 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 13:51:12 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 13:51:12 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 13:51:12 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 13:51:12 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 13:51:12 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 13:51:12 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 13:51:12 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 13:51:15 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@732bb66d: startup date [Mon May 20 13:51:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@773f7880] and template loader path [classpath:/templates/] 
2019-05-20 13:51:15 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 13:51:16 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 13:51:16 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 13:51:16 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 13:51:16 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 13:51:16 main Starting beans in phase 0 
2019-05-20 13:51:16 main Starting beans in phase 2147483647 
2019-05-20 13:51:16 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 13:51:16 main Started AreaControllerTest in 20.307 seconds (JVM running for 21.993) 
2019-05-20 13:51:16 main Initializing Spring FrameworkServlet '' 
2019-05-20 13:51:16 main FrameworkServlet '': initialization started 
2019-05-20 13:51:16 main FrameworkServlet '': initialization completed in 23 ms 
2019-05-20 13:51:16 main Initializing Spring FrameworkServlet '' 
2019-05-20 13:51:16 main FrameworkServlet '': initialization started 
2019-05-20 13:51:16 main FrameworkServlet '': initialization completed in 5 ms 
2019-05-20 13:51:16 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@732bb66d: startup date [Mon May 20 13:51:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@773f7880 
2019-05-20 13:51:16 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 13:51:16 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 13:51:16 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 13:51:16 Thread-13 Stopping beans in phase 0 
2019-05-20 13:51:16 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 13:51:17 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 13:51:17 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 13:51:17 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 13:51:17 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 13:51:17 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 13:51:18 Thread-13 Disable delta property : false 
2019-05-20 13:51:18 Thread-13 Single vip registry refresh property : null 
2019-05-20 13:51:18 Thread-13 Force full registry fetch : false 
2019-05-20 13:51:18 Thread-13 Application is null : false 
2019-05-20 13:51:18 Thread-13 Registered Applications size is zero : true 
2019-05-20 13:51:18 Thread-13 Application version is -1: true 
2019-05-20 13:51:18 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 13:51:18 Thread-13 The response status is 200 
2019-05-20 13:51:18 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 13:51:18 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 13:51:18 Thread-13 Discovery Client initialized at timestamp 1558331478291 with initial instances count: 0 
2019-05-20 13:51:18 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 13:51:21 Thread-13 Unregistering ... 
2019-05-20 13:51:21 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 13:51:21 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 13:51:21 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 13:51:21 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 13:51:21 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 13:51:21 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 15:54:40 main The following profiles are active: dev 
2019-05-20 15:54:45 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@17d238b1: startup date [Mon May 20 15:54:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@618c5d94 
2019-05-20 15:54:46 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 15:54:47 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 15:54:47 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 15:54:47 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f6f5034d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 15:54:47 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$130f064a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 15:54:48 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 15:54:54 main Using default implementation for ThreadExecutor 
2019-05-20 15:54:54 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 15:54:54 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 15:54:54 main RAMJobStore initialized. 
2019-05-20 15:54:54 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 15:54:54 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 15:54:54 main Quartz scheduler version: 2.3.0 
2019-05-20 15:54:54 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2335aef2 
2019-05-20 15:54:54 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 15:54:54 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 15:54:54 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 15:54:54 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 15:54:54 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 15:54:55 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@17d238b1: startup date [Mon May 20 15:54:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@618c5d94 
2019-05-20 15:54:55 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 15:54:55 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 15:54:55 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 15:54:55 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 15:54:55 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:54:55 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 15:54:55 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 15:54:55 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 15:54:55 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 15:54:55 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 15:54:58 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@17d238b1: startup date [Mon May 20 15:54:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@618c5d94] and template loader path [classpath:/templates/] 
2019-05-20 15:54:58 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 15:54:58 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 15:54:58 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 15:54:58 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 15:54:58 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 15:54:58 main Starting beans in phase 0 
2019-05-20 15:54:58 main Starting beans in phase 2147483647 
2019-05-20 15:54:58 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 15:54:58 main Started AreaControllerTest in 21.812 seconds (JVM running for 25.43) 
2019-05-20 15:54:59 main Initializing Spring FrameworkServlet '' 
2019-05-20 15:54:59 main FrameworkServlet '': initialization started 
2019-05-20 15:54:59 main FrameworkServlet '': initialization completed in 22 ms 
2019-05-20 15:54:59 main 请求url:http://localhost/v1/area/list 
2019-05-20 15:54:59 main 请求参数:[null] 
2019-05-20 15:54:59 main ==>  Preparing: SELECT ID,sName,UpID,sType,bActive,sPostCode FROM Area WHERE 1=1 and UpID is null  
2019-05-20 15:54:59 main ==> Parameters:  
2019-05-20 15:54:59 main <==      Total: 260 
2019-05-20 15:54:59 main 返回数据:{"data":[{"bActive":1,"id":"1","sName":"中国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"10","sName":"安圭拉岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"100","sName":"以色列","sPostCode":"","sType":"Country"},{"bActive":1,"id":"101","sName":"意大利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"102","sName":"科特迪瓦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"103","sName":"牙买加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"104","sName":"日本","sPostCode":"","sType":"Country"},{"bActive":1,"id":"105","sName":"泽西岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"106","sName":"约旦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"107","sName":"柬埔塞","sPostCode":"","sType":"Country"},{"bActive":1,"id":"108","sName":"哈萨克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"109","sName":"肯尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"11","sName":"南极","sPostCode":"","sType":"Country"},{"bActive":1,"id":"110","sName":"基里巴斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"111","sName":"科威特","sPostCode":"","sType":"Country"},{"bActive":1,"id":"112","sName":"吉尔吉斯斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"113","sName":"老挝","sPostCode":"","sType":"Country"},{"bActive":1,"id":"114","sName":"拉脱维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"115","sName":"黎巴嫩","sPostCode":"","sType":"Country"},{"bActive":1,"id":"116","sName":"莱索托","sPostCode":"","sType":"Country"},{"bActive":1,"id":"117","sName":"利比里亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"118","sName":"利比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"119","sName":"列支敦士登","sPostCode":"","sType":"Country"},{"bActive":1,"id":"12","sName":"安提瓜和巴布达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"120","sName":"立陶宛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"121","sName":"卢森堡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"122","sName":"马其顿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"123","sName":"马达加斯加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"124","sName":"马拉维","sPostCode":"","sType":"Country"},{"bActive":1,"id":"125","sName":"马来西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"126","sName":"马尔代夫","sPostCode":"","sType":"Country"},{"bActive":1,"id":"127","sName":"马里","sPostCode":"","sType":"Country"},{"bActive":1,"id":"128","sName":"马耳他","sPostCode":"","sType":"Country"},{"bActive":1,"id":"129","sName":"马绍尔群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"13","sName":"阿根廷","sPostCode":"","sType":"Country"},{"bActive":1,"id":"130","sName":"马提尼克(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"131","sName":"毛里塔尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"132","sName":"毛里求斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"133","sName":"马约特岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"134","sName":"墨西哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"135","sName":"密克罗尼西亚(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"136","sName":"中途岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"137","sName":"摩纳哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"138","sName":"蒙古","sPostCode":"","sType":"Country"},{"bActive":1,"id":"139","sName":"黑山","sPostCode":"","sType":"Country"},{"bActive":1,"id":"14","sName":"亚美尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"140","sName":"蒙特塞拉特岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"141","sName":"摩洛哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"142","sName":"莫桑比克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"143","sName":"缅甸","sPostCode":"","sType":"Country"},{"bActive":1,"id":"144","sName":"纳米比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"145","sName":"瑙鲁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"146","sName":"尼泊尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"147","sName":"荷兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"148","sName":"荷属安的列斯群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"149","sName":"新喀里多尼亚群岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"15","sName":"阿鲁巴岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"150","sName":"新西兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"151","sName":"尼加拉瓜","sPostCode":"","sType":"Country"},{"bActive":1,"id":"152","sName":"尼日尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"153","sName":"尼日利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"154","sName":"纽埃岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"155","sName":"诺福克岛(澳)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"156","sName":"朝鲜","sPostCode":"","sType":"Country"},{"bActive":1,"id":"157","sName":"马里亚纳群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"158","sName":"挪威","sPostCode":"","sType":"Country"},{"bActive":1,"id":"159","sName":"阿曼","sPostCode":"","sType":"Country"},{"bActive":1,"id":"16","sName":"澳大利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"160","sName":"巴基斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"161","sName":"帕劳(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"162","sName":"巴拿马","sPostCode":"","sType":"Country"},{"bActive":1,"id":"163","sName":"巴布亚新几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"164","sName":"巴拉圭","sPostCode":"","sType":"Country"},{"bActive":1,"id":"165","sName":"秘鲁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"166","sName":"菲律宾","sPostCode":"","sType":"Country"},{"bActive":1,"id":"167","sName":"波兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"168","sName":"葡萄牙","sPostCode":"","sType":"Country"},{"bActive":1,"id":"169","sName":"波多黎各(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"17","sName":"奥地利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"170","sName":"卡塔尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"171","sName":"摩尔多瓦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"172","sName":"留尼汪岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"173","sName":"罗马尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"174","sName":"俄罗斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"175","sName":"卢旺达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"176","sName":"阿森松(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"177","sName":"圣赫勒拿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"178","sName":"圣克里斯托弗和尼维斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"179","sName":"圣卢西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"18","sName":"阿塞拜疆","sPostCode":"","sType":"Country"},{"bActive":1,"id":"180","sName":"圣皮埃尔岛及密克隆岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"181","sName":"圣文森特岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"182","sName":"西萨摩亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"183","sName":"圣马力诺","sPostCode":"","sType":"Country"},{"bActive":1,"id":"184","sName":"圣多美和普林西比","sPostCode":"","sType":"Country"},{"bActive":1,"id":"185","sName":"沙特阿拉伯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"186","sName":"塞内加尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"187","sName":"塞尔维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"188","sName":"塞舌尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"189","sName":"塞拉利昂","sPostCode":"","sType":"Country"},{"bActive":1,"id":"19","sName":"巴林","sPostCode":"","sType":"Country"},{"bActive":1,"id":"190","sName":"新加坡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"191","sName":"圣马丁(荷)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"192","sName":"斯洛伐克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"193","sName":"斯洛文尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"194","sName":"所罗门群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"195","sName":"索马里","sPostCode":"","sType":"Country"},{"bActive":1,"id":"196","sName":"南非","sPostCode":"","sType":"Country"},{"bActive":1,"id":"197","sName":"南乔治亚与南桑威奇群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"198","sName":"韩国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"199","sName":"西班牙","sPostCode":"","sType":"Country"},{"bActive":1,"id":"2","sName":"阿富汗","sPostCode":"","sType":"Country"},{"bActive":1,"id":"20","sName":"根西岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"200","sName":"斯里兰卡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"201","sName":"苏丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"202","sName":"苏里南","sPostCode":"","sType":"Country"},{"bActive":1,"id":"203","sName":"斯瓦尔巴群岛(挪)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"204","sName":"斯威士兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"205","sName":"瑞典","sPostCode":"","sType":"Country"},{"bActive":1,"id":"206","sName":"瑞士","sPostCode":"","sType":"Country"},{"bActive":1,"id":"207","sName":"叙利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"208","sName":"塔吉克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"209","sName":"泰国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"21","sName":"孟加拉国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"210","sName":"巴哈马国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"211","sName":"梵蒂冈","sPostCode":"","sType":"Country"},{"bActive":1,"id":"212","sName":"东帝汶","sPostCode":"","sType":"Country"},{"bActive":1,"id":"213","sName":"多哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"214","sName":"托克劳群岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"215","sName":"汤加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"216","sName":"特立尼达和多巴哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"217","sName":"突尼斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"218","sName":"土耳其","sPostCode":"","sType":"Country"},{"bActive":1,"id":"219","sName":"土库曼斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"22","sName":"巴巴多斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"220","sName":"特克斯和凯科斯群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"221","sName":"图瓦卢","sPostCode":"","sType":"Country"},{"bActive":1,"id":"222","sName":"乌干达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"223","sName":"乌克兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"224","sName":"阿拉伯联合酋长国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"225","sName":"英国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"226","sName":"坦桑尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"227","sName":"美国本土外小岛屿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"228","sName":"美国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"229","sName":"乌拉圭","sPostCode":"","sType":"Country"},{"bActive":1,"id":"23","sName":"白俄罗斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"230","sName":"乌兹别克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"231","sName":"瓦努阿图","sPostCode":"","sType":"Country"},{"bActive":1,"id":"232","sName":"委内瑞拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"233","sName":"越南","sPostCode":"","sType":"Country"},{"bActive":1,"id":"234","sName":"维尔京群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"235","sName":"维尔京群岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"236","sName":"瓦里斯和富士那群岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"237","sName":"西撒哈拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"238","sName":"也门","sPostCode":"","sType":"Country"},{"bActive":1,"id":"239","sName":"南斯拉夫","sPostCode":"","sType":"Country"},{"bActive":1,"id":"24","sName":"比利时","sPostCode":"","sType":"Country"},{"bActive":1,"id":"240","sName":"赞比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"241","sName":"桑给巴尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"242","sName":"津巴布韦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"243","sName":"文莱","sPostCode":"","sType":"Country"},{"bActive":1,"id":"244","sName":"尼维斯岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"245","sName":"南苏丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"246","sName":"加勒比荷兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"247","sName":"布韦岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"248","sName":"赫德岛和麦克唐纳群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"249","sName":"英属印度洋领地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"25","sName":"伯利兹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"250","sName":"皮特凯恩群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"251","sName":"巴勒斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"252","sName":"法属南部和南极领地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"253","sName":"阿森松岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"254","sName":"圣巴泰勒米岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"255","sName":"法国本土","sPostCode":"","sType":"Country"},{"bActive":1,"id":"256","sName":"奥尔德尼岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"257","sName":"库拉索","sPostCode":"","sType":"Country"},{"bActive":1,"id":"258","sName":"科索沃","sPostCode":"","sType":"Country"},{"bActive":1,"id":"259","sName":"圣马丁岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"26","sName":"贝宁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"260","sName":"苏格兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"27","sName":"百慕大群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"28","sName":"不丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"29","sName":"玻利维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"3","sName":"奥兰群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"30","sName":"波斯尼亚和黑塞哥维那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"31","sName":"博茨瓦纳","sPostCode":"","sType":"Country"},{"bActive":1,"id":"32","sName":"巴西","sPostCode":"","sType":"Country"},{"bActive":1,"id":"33","sName":"保加利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"34","sName":"布基纳法索","sPostCode":"","sType":"Country"},{"bActive":1,"id":"35","sName":"布隆迪","sPostCode":"","sType":"Country"},{"bActive":1,"id":"36","sName":"喀麦隆","sPostCode":"","sType":"Country"},{"bActive":1,"id":"37","sName":"加拿大","sPostCode":"","sType":"Country"},{"bActive":1,"id":"38","sName":"加那利群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"39","sName":"佛得角","sPostCode":"","sType":"Country"},{"bActive":1,"id":"4","sName":"阿拉斯加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"40","sName":"开曼群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"41","sName":"中非","sPostCode":"","sType":"Country"},{"bActive":1,"id":"42","sName":"乍得","sPostCode":"","sType":"Country"},{"bActive":1,"id":"43","sName":"智利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"44","sName":"圣诞岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"45","sName":"科科斯岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"46","sName":"哥伦比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"47","sName":"科摩罗","sPostCode":"","sType":"Country"},{"bActive":1,"id":"48","sName":"刚果","sPostCode":"","sType":"Country"},{"bActive":1,"id":"49","sName":"科克群岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"5","sName":"阿尔巴尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"50","sName":"哥斯达黎加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"51","sName":"克罗地亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"52","sName":"古巴","sPostCode":"","sType":"Country"},{"bActive":1,"id":"53","sName":"塞浦路斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"54","sName":"捷克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"55","sName":"刚果(金)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"56","sName":"丹麦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"57","sName":"迪戈加西亚岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"58","sName":"吉布提","sPostCode":"","sType":"Country"},{"bActive":1,"id":"59","sName":"多米尼克国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"6","sName":"阿尔及利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"60","sName":"多米尼加共和国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"61","sName":"厄瓜多尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"62","sName":"埃及","sPostCode":"","sType":"Country"},{"bActive":1,"id":"63","sName":"萨尔瓦多","sPostCode":"","sType":"Country"},{"bActive":1,"id":"64","sName":"赤道几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"65","sName":"厄立特里亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"66","sName":"爱沙尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"67","sName":"埃塞俄比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"68","sName":"福克兰群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"69","sName":"法罗群岛(丹)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"7","sName":"东萨摩亚(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"70","sName":"斐济","sPostCode":"","sType":"Country"},{"bActive":1,"id":"71","sName":"芬兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"72","sName":"法国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"73","sName":"法属波里尼西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"74","sName":"加蓬","sPostCode":"","sType":"Country"},{"bActive":1,"id":"75","sName":"冈比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"76","sName":"格鲁吉亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"77","sName":"德国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"78","sName":"加纳","sPostCode":"","sType":"Country"},{"bActive":1,"id":"79","sName":"直布罗陀(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"8","sName":"安道尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"80","sName":"希腊","sPostCode":"","sType":"Country"},{"bActive":1,"id":"81","sName":"格陵兰岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"82","sName":"格林纳达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"83","sName":"瓜德罗普岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"84","sName":"关岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"85","sName":"危地马拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"86","sName":"几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"87","sName":"几内亚比绍","sPostCode":"","sType":"Country"},{"bActive":1,"id":"88","sName":"法属圭亚那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"89","sName":"圭亚那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"9","sName":"安哥拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"90","sName":"海地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"91","sName":"洪都拉斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"92","sName":"匈牙利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"93","sName":"冰岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"94","sName":"印度","sPostCode":"","sType":"Country"},{"bActive":1,"id":"95","sName":"印度尼西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"96","sName":"伊郎","sPostCode":"","sType":"Country"},{"bActive":1,"id":"97","sName":"伊拉克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"98","sName":"爱尔兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"99","sName":"马恩岛(英)","sPostCode":"","sType":"Country"}],"message":"操作成功","status":10000} 
2019-05-20 15:54:59 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@17d238b1: startup date [Mon May 20 15:54:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@618c5d94 
2019-05-20 15:54:59 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 15:54:59 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 15:54:59 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 15:54:59 Thread-15 Stopping beans in phase 0 
2019-05-20 15:54:59 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 15:55:00 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 15:55:00 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 15:55:00 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 15:55:00 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 15:55:00 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 15:55:00 Thread-15 Disable delta property : false 
2019-05-20 15:55:00 Thread-15 Single vip registry refresh property : null 
2019-05-20 15:55:00 Thread-15 Force full registry fetch : false 
2019-05-20 15:55:00 Thread-15 Application is null : false 
2019-05-20 15:55:00 Thread-15 Registered Applications size is zero : true 
2019-05-20 15:55:00 Thread-15 Application version is -1: true 
2019-05-20 15:55:00 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 15:55:01 Thread-15 The response status is 200 
2019-05-20 15:55:01 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 15:55:01 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 15:55:01 Thread-15 Discovery Client initialized at timestamp 1558338901024 with initial instances count: 0 
2019-05-20 15:55:01 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 15:55:03 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 15:55:03 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 15:55:03 scheduler_Worker-1 ==>  Preparing: DELETE FROM AccessToken WHERE dNewDate < ?  
2019-05-20 15:55:03 scheduler_Worker-1 ==> Parameters: 2019-05-13 15:55:03.967(Timestamp) 
2019-05-20 15:55:03 scheduler_Worker-1 <==    Updates: 0 
2019-05-20 15:55:04 Thread-15 Unregistering ... 
2019-05-20 15:55:04 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 15:55:04 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 15:55:04 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 15:55:04 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 15:55:04 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 15:55:04 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 15:58:57 main The following profiles are active: dev 
2019-05-20 15:59:00 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 15:59:00 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b 
2019-05-20 15:59:01 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 15:59:02 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 15:59:02 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 15:59:02 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8d4734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 15:59:02 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28a74a31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 15:59:03 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 15:59:08 main Using default implementation for ThreadExecutor 
2019-05-20 15:59:08 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 15:59:08 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 15:59:08 main RAMJobStore initialized. 
2019-05-20 15:59:08 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 15:59:08 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 15:59:08 main Quartz scheduler version: 2.3.0 
2019-05-20 15:59:08 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6f1d799 
2019-05-20 15:59:08 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 15:59:08 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 15:59:08 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 15:59:08 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 15:59:09 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 15:59:09 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 15:59:00 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b 
2019-05-20 15:59:09 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 15:59:09 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 15:59:09 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 15:59:09 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 15:59:09 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 15:59:09 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 15:59:09 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 15:59:09 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 15:59:11 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 15:59:00 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b] and template loader path [classpath:/templates/] 
2019-05-20 15:59:11 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 15:59:12 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 15:59:12 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 15:59:12 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 15:59:12 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 15:59:12 main Starting beans in phase 0 
2019-05-20 15:59:12 main Starting beans in phase 2147483647 
2019-05-20 15:59:12 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 15:59:12 main Started AreaControllerTest in 18.199 seconds (JVM running for 20.377) 
2019-05-20 15:59:12 main Initializing Spring FrameworkServlet '' 
2019-05-20 15:59:12 main FrameworkServlet '': initialization started 
2019-05-20 15:59:12 main FrameworkServlet '': initialization completed in 30 ms 
2019-05-20 15:59:12 main 请求url:http://localhost/v1/area/list 
2019-05-20 15:59:12 main 请求参数:[null] 
2019-05-20 15:59:13 main ==>  Preparing: SELECT ID,sName,UpID,sType,bActive,sPostCode FROM Area WHERE 1=1 and UpID is null  
2019-05-20 15:59:13 main ==> Parameters:  
2019-05-20 15:59:13 main <==      Total: 260 
2019-05-20 15:59:13 main 返回数据:{"data":[{"bActive":1,"id":"1","sName":"中国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"10","sName":"安圭拉岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"100","sName":"以色列","sPostCode":"","sType":"Country"},{"bActive":1,"id":"101","sName":"意大利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"102","sName":"科特迪瓦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"103","sName":"牙买加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"104","sName":"日本","sPostCode":"","sType":"Country"},{"bActive":1,"id":"105","sName":"泽西岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"106","sName":"约旦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"107","sName":"柬埔塞","sPostCode":"","sType":"Country"},{"bActive":1,"id":"108","sName":"哈萨克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"109","sName":"肯尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"11","sName":"南极","sPostCode":"","sType":"Country"},{"bActive":1,"id":"110","sName":"基里巴斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"111","sName":"科威特","sPostCode":"","sType":"Country"},{"bActive":1,"id":"112","sName":"吉尔吉斯斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"113","sName":"老挝","sPostCode":"","sType":"Country"},{"bActive":1,"id":"114","sName":"拉脱维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"115","sName":"黎巴嫩","sPostCode":"","sType":"Country"},{"bActive":1,"id":"116","sName":"莱索托","sPostCode":"","sType":"Country"},{"bActive":1,"id":"117","sName":"利比里亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"118","sName":"利比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"119","sName":"列支敦士登","sPostCode":"","sType":"Country"},{"bActive":1,"id":"12","sName":"安提瓜和巴布达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"120","sName":"立陶宛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"121","sName":"卢森堡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"122","sName":"马其顿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"123","sName":"马达加斯加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"124","sName":"马拉维","sPostCode":"","sType":"Country"},{"bActive":1,"id":"125","sName":"马来西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"126","sName":"马尔代夫","sPostCode":"","sType":"Country"},{"bActive":1,"id":"127","sName":"马里","sPostCode":"","sType":"Country"},{"bActive":1,"id":"128","sName":"马耳他","sPostCode":"","sType":"Country"},{"bActive":1,"id":"129","sName":"马绍尔群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"13","sName":"阿根廷","sPostCode":"","sType":"Country"},{"bActive":1,"id":"130","sName":"马提尼克(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"131","sName":"毛里塔尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"132","sName":"毛里求斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"133","sName":"马约特岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"134","sName":"墨西哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"135","sName":"密克罗尼西亚(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"136","sName":"中途岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"137","sName":"摩纳哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"138","sName":"蒙古","sPostCode":"","sType":"Country"},{"bActive":1,"id":"139","sName":"黑山","sPostCode":"","sType":"Country"},{"bActive":1,"id":"14","sName":"亚美尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"140","sName":"蒙特塞拉特岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"141","sName":"摩洛哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"142","sName":"莫桑比克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"143","sName":"缅甸","sPostCode":"","sType":"Country"},{"bActive":1,"id":"144","sName":"纳米比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"145","sName":"瑙鲁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"146","sName":"尼泊尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"147","sName":"荷兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"148","sName":"荷属安的列斯群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"149","sName":"新喀里多尼亚群岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"15","sName":"阿鲁巴岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"150","sName":"新西兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"151","sName":"尼加拉瓜","sPostCode":"","sType":"Country"},{"bActive":1,"id":"152","sName":"尼日尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"153","sName":"尼日利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"154","sName":"纽埃岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"155","sName":"诺福克岛(澳)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"156","sName":"朝鲜","sPostCode":"","sType":"Country"},{"bActive":1,"id":"157","sName":"马里亚纳群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"158","sName":"挪威","sPostCode":"","sType":"Country"},{"bActive":1,"id":"159","sName":"阿曼","sPostCode":"","sType":"Country"},{"bActive":1,"id":"16","sName":"澳大利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"160","sName":"巴基斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"161","sName":"帕劳(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"162","sName":"巴拿马","sPostCode":"","sType":"Country"},{"bActive":1,"id":"163","sName":"巴布亚新几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"164","sName":"巴拉圭","sPostCode":"","sType":"Country"},{"bActive":1,"id":"165","sName":"秘鲁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"166","sName":"菲律宾","sPostCode":"","sType":"Country"},{"bActive":1,"id":"167","sName":"波兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"168","sName":"葡萄牙","sPostCode":"","sType":"Country"},{"bActive":1,"id":"169","sName":"波多黎各(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"17","sName":"奥地利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"170","sName":"卡塔尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"171","sName":"摩尔多瓦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"172","sName":"留尼汪岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"173","sName":"罗马尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"174","sName":"俄罗斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"175","sName":"卢旺达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"176","sName":"阿森松(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"177","sName":"圣赫勒拿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"178","sName":"圣克里斯托弗和尼维斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"179","sName":"圣卢西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"18","sName":"阿塞拜疆","sPostCode":"","sType":"Country"},{"bActive":1,"id":"180","sName":"圣皮埃尔岛及密克隆岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"181","sName":"圣文森特岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"182","sName":"西萨摩亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"183","sName":"圣马力诺","sPostCode":"","sType":"Country"},{"bActive":1,"id":"184","sName":"圣多美和普林西比","sPostCode":"","sType":"Country"},{"bActive":1,"id":"185","sName":"沙特阿拉伯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"186","sName":"塞内加尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"187","sName":"塞尔维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"188","sName":"塞舌尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"189","sName":"塞拉利昂","sPostCode":"","sType":"Country"},{"bActive":1,"id":"19","sName":"巴林","sPostCode":"","sType":"Country"},{"bActive":1,"id":"190","sName":"新加坡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"191","sName":"圣马丁(荷)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"192","sName":"斯洛伐克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"193","sName":"斯洛文尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"194","sName":"所罗门群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"195","sName":"索马里","sPostCode":"","sType":"Country"},{"bActive":1,"id":"196","sName":"南非","sPostCode":"","sType":"Country"},{"bActive":1,"id":"197","sName":"南乔治亚与南桑威奇群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"198","sName":"韩国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"199","sName":"西班牙","sPostCode":"","sType":"Country"},{"bActive":1,"id":"2","sName":"阿富汗","sPostCode":"","sType":"Country"},{"bActive":1,"id":"20","sName":"根西岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"200","sName":"斯里兰卡","sPostCode":"","sType":"Country"},{"bActive":1,"id":"201","sName":"苏丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"202","sName":"苏里南","sPostCode":"","sType":"Country"},{"bActive":1,"id":"203","sName":"斯瓦尔巴群岛(挪)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"204","sName":"斯威士兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"205","sName":"瑞典","sPostCode":"","sType":"Country"},{"bActive":1,"id":"206","sName":"瑞士","sPostCode":"","sType":"Country"},{"bActive":1,"id":"207","sName":"叙利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"208","sName":"塔吉克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"209","sName":"泰国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"21","sName":"孟加拉国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"210","sName":"巴哈马国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"211","sName":"梵蒂冈","sPostCode":"","sType":"Country"},{"bActive":1,"id":"212","sName":"东帝汶","sPostCode":"","sType":"Country"},{"bActive":1,"id":"213","sName":"多哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"214","sName":"托克劳群岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"215","sName":"汤加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"216","sName":"特立尼达和多巴哥","sPostCode":"","sType":"Country"},{"bActive":1,"id":"217","sName":"突尼斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"218","sName":"土耳其","sPostCode":"","sType":"Country"},{"bActive":1,"id":"219","sName":"土库曼斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"22","sName":"巴巴多斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"220","sName":"特克斯和凯科斯群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"221","sName":"图瓦卢","sPostCode":"","sType":"Country"},{"bActive":1,"id":"222","sName":"乌干达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"223","sName":"乌克兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"224","sName":"阿拉伯联合酋长国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"225","sName":"英国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"226","sName":"坦桑尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"227","sName":"美国本土外小岛屿","sPostCode":"","sType":"Country"},{"bActive":1,"id":"228","sName":"美国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"229","sName":"乌拉圭","sPostCode":"","sType":"Country"},{"bActive":1,"id":"23","sName":"白俄罗斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"230","sName":"乌兹别克斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"231","sName":"瓦努阿图","sPostCode":"","sType":"Country"},{"bActive":1,"id":"232","sName":"委内瑞拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"233","sName":"越南","sPostCode":"","sType":"Country"},{"bActive":1,"id":"234","sName":"维尔京群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"235","sName":"维尔京群岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"236","sName":"瓦里斯和富士那群岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"237","sName":"西撒哈拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"238","sName":"也门","sPostCode":"","sType":"Country"},{"bActive":1,"id":"239","sName":"南斯拉夫","sPostCode":"","sType":"Country"},{"bActive":1,"id":"24","sName":"比利时","sPostCode":"","sType":"Country"},{"bActive":1,"id":"240","sName":"赞比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"241","sName":"桑给巴尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"242","sName":"津巴布韦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"243","sName":"文莱","sPostCode":"","sType":"Country"},{"bActive":1,"id":"244","sName":"尼维斯岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"245","sName":"南苏丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"246","sName":"加勒比荷兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"247","sName":"布韦岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"248","sName":"赫德岛和麦克唐纳群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"249","sName":"英属印度洋领地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"25","sName":"伯利兹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"250","sName":"皮特凯恩群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"251","sName":"巴勒斯坦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"252","sName":"法属南部和南极领地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"253","sName":"阿森松岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"254","sName":"圣巴泰勒米岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"255","sName":"法国本土","sPostCode":"","sType":"Country"},{"bActive":1,"id":"256","sName":"奥尔德尼岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"257","sName":"库拉索","sPostCode":"","sType":"Country"},{"bActive":1,"id":"258","sName":"科索沃","sPostCode":"","sType":"Country"},{"bActive":1,"id":"259","sName":"圣马丁岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"26","sName":"贝宁","sPostCode":"","sType":"Country"},{"bActive":1,"id":"260","sName":"苏格兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"27","sName":"百慕大群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"28","sName":"不丹","sPostCode":"","sType":"Country"},{"bActive":1,"id":"29","sName":"玻利维亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"3","sName":"奥兰群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"30","sName":"波斯尼亚和黑塞哥维那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"31","sName":"博茨瓦纳","sPostCode":"","sType":"Country"},{"bActive":1,"id":"32","sName":"巴西","sPostCode":"","sType":"Country"},{"bActive":1,"id":"33","sName":"保加利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"34","sName":"布基纳法索","sPostCode":"","sType":"Country"},{"bActive":1,"id":"35","sName":"布隆迪","sPostCode":"","sType":"Country"},{"bActive":1,"id":"36","sName":"喀麦隆","sPostCode":"","sType":"Country"},{"bActive":1,"id":"37","sName":"加拿大","sPostCode":"","sType":"Country"},{"bActive":1,"id":"38","sName":"加那利群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"39","sName":"佛得角","sPostCode":"","sType":"Country"},{"bActive":1,"id":"4","sName":"阿拉斯加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"40","sName":"开曼群岛(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"41","sName":"中非","sPostCode":"","sType":"Country"},{"bActive":1,"id":"42","sName":"乍得","sPostCode":"","sType":"Country"},{"bActive":1,"id":"43","sName":"智利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"44","sName":"圣诞岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"45","sName":"科科斯岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"46","sName":"哥伦比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"47","sName":"科摩罗","sPostCode":"","sType":"Country"},{"bActive":1,"id":"48","sName":"刚果","sPostCode":"","sType":"Country"},{"bActive":1,"id":"49","sName":"科克群岛(新)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"5","sName":"阿尔巴尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"50","sName":"哥斯达黎加","sPostCode":"","sType":"Country"},{"bActive":1,"id":"51","sName":"克罗地亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"52","sName":"古巴","sPostCode":"","sType":"Country"},{"bActive":1,"id":"53","sName":"塞浦路斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"54","sName":"捷克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"55","sName":"刚果(金)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"56","sName":"丹麦","sPostCode":"","sType":"Country"},{"bActive":1,"id":"57","sName":"迪戈加西亚岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"58","sName":"吉布提","sPostCode":"","sType":"Country"},{"bActive":1,"id":"59","sName":"多米尼克国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"6","sName":"阿尔及利亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"60","sName":"多米尼加共和国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"61","sName":"厄瓜多尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"62","sName":"埃及","sPostCode":"","sType":"Country"},{"bActive":1,"id":"63","sName":"萨尔瓦多","sPostCode":"","sType":"Country"},{"bActive":1,"id":"64","sName":"赤道几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"65","sName":"厄立特里亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"66","sName":"爱沙尼亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"67","sName":"埃塞俄比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"68","sName":"福克兰群岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"69","sName":"法罗群岛(丹)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"7","sName":"东萨摩亚(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"70","sName":"斐济","sPostCode":"","sType":"Country"},{"bActive":1,"id":"71","sName":"芬兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"72","sName":"法国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"73","sName":"法属波里尼西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"74","sName":"加蓬","sPostCode":"","sType":"Country"},{"bActive":1,"id":"75","sName":"冈比亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"76","sName":"格鲁吉亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"77","sName":"德国","sPostCode":"","sType":"Country"},{"bActive":1,"id":"78","sName":"加纳","sPostCode":"","sType":"Country"},{"bActive":1,"id":"79","sName":"直布罗陀(英)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"8","sName":"安道尔","sPostCode":"","sType":"Country"},{"bActive":1,"id":"80","sName":"希腊","sPostCode":"","sType":"Country"},{"bActive":1,"id":"81","sName":"格陵兰岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"82","sName":"格林纳达","sPostCode":"","sType":"Country"},{"bActive":1,"id":"83","sName":"瓜德罗普岛(法)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"84","sName":"关岛(美)","sPostCode":"","sType":"Country"},{"bActive":1,"id":"85","sName":"危地马拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"86","sName":"几内亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"87","sName":"几内亚比绍","sPostCode":"","sType":"Country"},{"bActive":1,"id":"88","sName":"法属圭亚那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"89","sName":"圭亚那","sPostCode":"","sType":"Country"},{"bActive":1,"id":"9","sName":"安哥拉","sPostCode":"","sType":"Country"},{"bActive":1,"id":"90","sName":"海地","sPostCode":"","sType":"Country"},{"bActive":1,"id":"91","sName":"洪都拉斯","sPostCode":"","sType":"Country"},{"bActive":1,"id":"92","sName":"匈牙利","sPostCode":"","sType":"Country"},{"bActive":1,"id":"93","sName":"冰岛","sPostCode":"","sType":"Country"},{"bActive":1,"id":"94","sName":"印度","sPostCode":"","sType":"Country"},{"bActive":1,"id":"95","sName":"印度尼西亚","sPostCode":"","sType":"Country"},{"bActive":1,"id":"96","sName":"伊郎","sPostCode":"","sType":"Country"},{"bActive":1,"id":"97","sName":"伊拉克","sPostCode":"","sType":"Country"},{"bActive":1,"id":"98","sName":"爱尔兰","sPostCode":"","sType":"Country"},{"bActive":1,"id":"99","sName":"马恩岛(英)","sPostCode":"","sType":"Country"}],"message":"操作成功","status":10000} 
2019-05-20 15:59:13 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 15:59:00 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b 
2019-05-20 15:59:13 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 15:59:13 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 15:59:13 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 15:59:13 Thread-15 Stopping beans in phase 0 
2019-05-20 15:59:13 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 15:59:13 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 15:59:13 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 15:59:13 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 15:59:13 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 15:59:14 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 15:59:14 Thread-15 Disable delta property : false 
2019-05-20 15:59:14 Thread-15 Single vip registry refresh property : null 
2019-05-20 15:59:14 Thread-15 Force full registry fetch : false 
2019-05-20 15:59:14 Thread-15 Application is null : false 
2019-05-20 15:59:14 Thread-15 Registered Applications size is zero : true 
2019-05-20 15:59:14 Thread-15 Application version is -1: true 
2019-05-20 15:59:14 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 15:59:14 Thread-15 The response status is 200 
2019-05-20 15:59:14 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 15:59:14 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 15:59:14 Thread-15 Discovery Client initialized at timestamp 1558339154572 with initial instances count: 0 
2019-05-20 15:59:14 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 15:59:17 Thread-15 Unregistering ... 
2019-05-20 15:59:17 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 15:59:17 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 15:59:17 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 15:59:17 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 15:59:17 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 15:59:17 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 16:27:29 main The following profiles are active: dev 
2019-05-20 16:27:32 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6b7d1df8: startup date [Mon May 20 16:27:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b 
2019-05-20 16:27:33 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 16:27:34 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 16:27:34 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 16:27:34 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5fa57716] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:27:35 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7bbf7a13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:27:35 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 16:27:39 main Using default implementation for ThreadExecutor 
2019-05-20 16:27:39 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 16:27:39 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 16:27:39 main RAMJobStore initialized. 
2019-05-20 16:27:39 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 16:27:39 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 16:27:39 main Quartz scheduler version: 2.3.0 
2019-05-20 16:27:39 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@3d132bb6 
2019-05-20 16:27:40 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:27:40 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:27:40 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:27:40 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:27:40 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:27:40 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6b7d1df8: startup date [Mon May 20 16:27:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b 
2019-05-20 16:27:40 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 16:27:40 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 16:27:40 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 16:27:40 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:27:40 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:27:40 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 16:27:40 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:27:40 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:27:40 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:27:42 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@6b7d1df8: startup date [Mon May 20 16:27:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b] and template loader path [classpath:/templates/] 
2019-05-20 16:27:42 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 16:27:43 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 16:27:43 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:27:43 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:27:43 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:27:43 main Starting beans in phase 0 
2019-05-20 16:27:43 main Starting beans in phase 2147483647 
2019-05-20 16:27:43 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 16:27:43 main Started AreaControllerTest in 16.316 seconds (JVM running for 18.518) 
2019-05-20 16:27:43 main Initializing Spring FrameworkServlet '' 
2019-05-20 16:27:43 main FrameworkServlet '': initialization started 
2019-05-20 16:27:43 main FrameworkServlet '': initialization completed in 27 ms 
2019-05-20 16:27:44 main 请求url:http://localhost/v1/area/list 
2019-05-20 16:27:44 main 请求参数:[1] 
2019-05-20 16:27:44 main ==>  Preparing: SELECT ID,sName,UpID,sType,bActive,sPostCode FROM Area WHERE 1=1 and UpID = 1  
2019-05-20 16:27:44 main ==> Parameters:  
2019-05-20 16:27:44 main <==      Total: 8 
2019-05-20 16:27:44 main 返回数据:{"data":[{"bActive":1,"id":"1000000","sName":"华北","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"2000000","sName":"东北","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"3000000","sName":"华东","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"4000000","sName":"华南","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"5000000","sName":"西南","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"6000000","sName":"西北","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"8000000","sName":"港澳台","sPostCode":"","sType":"Group","upID":"1"},{"bActive":1,"id":"9000000","sName":"海外","sPostCode":"","sType":"Group","upID":"1"}],"message":"操作成功","status":10000} 
2019-05-20 16:27:44 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@6b7d1df8: startup date [Mon May 20 16:27:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e63ec0b 
2019-05-20 16:27:44 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 16:27:44 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 16:27:44 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 16:27:44 Thread-15 Stopping beans in phase 0 
2019-05-20 16:27:44 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 16:27:44 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 16:27:44 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 16:27:44 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 16:27:44 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 16:27:45 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 16:27:45 Thread-15 Disable delta property : false 
2019-05-20 16:27:45 Thread-15 Single vip registry refresh property : null 
2019-05-20 16:27:45 Thread-15 Force full registry fetch : false 
2019-05-20 16:27:45 Thread-15 Application is null : false 
2019-05-20 16:27:45 Thread-15 Registered Applications size is zero : true 
2019-05-20 16:27:45 Thread-15 Application version is -1: true 
2019-05-20 16:27:45 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 16:27:45 Thread-15 The response status is 200 
2019-05-20 16:27:45 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 16:27:45 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 16:27:45 Thread-15 Discovery Client initialized at timestamp 1558340865566 with initial instances count: 0 
2019-05-20 16:27:45 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 16:27:48 Thread-15 Unregistering ... 
2019-05-20 16:27:48 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 16:27:48 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 16:27:48 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 16:27:48 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 16:27:48 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 16:27:48 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 16:44:31 main The following profiles are active: dev 
2019-05-20 16:44:34 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 16:44:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878 
2019-05-20 16:44:35 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 16:44:36 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 16:44:36 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 16:44:36 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8d4734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:44:36 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28a74a31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:44:37 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 16:44:41 main Using default implementation for ThreadExecutor 
2019-05-20 16:44:41 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 16:44:41 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 16:44:41 main RAMJobStore initialized. 
2019-05-20 16:44:41 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 16:44:41 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 16:44:41 main Quartz scheduler version: 2.3.0 
2019-05-20 16:44:41 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1c011855 
2019-05-20 16:44:42 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:44:42 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:44:42 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:44:42 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:44:42 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:44:42 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 16:44:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878 
2019-05-20 16:44:42 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 16:44:42 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 16:44:42 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 16:44:42 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:44:42 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 16:44:42 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 16:44:42 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:44:42 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:44:42 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:44:44 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 16:44:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878] and template loader path [classpath:/templates/] 
2019-05-20 16:44:44 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 16:44:45 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 16:44:45 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:44:45 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:44:45 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:44:45 main Starting beans in phase 0 
2019-05-20 16:44:45 main Starting beans in phase 2147483647 
2019-05-20 16:44:45 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 16:44:45 main Started ProductControllerTest in 15.739 seconds (JVM running for 17.97) 
2019-05-20 16:44:45 main Initializing Spring FrameworkServlet '' 
2019-05-20 16:44:45 main FrameworkServlet '': initialization started 
2019-05-20 16:44:45 main FrameworkServlet '': initialization completed in 25 ms 
2019-05-20 16:44:45 main 请求url:http://localhost/v1/product/productList 
2019-05-20 16:44:45 main 请求参数:[141, 1, null] 
2019-05-20 16:44:45 main ==>  Preparing: SELECT COUNT(1) FROM Product WHERE ProductCatID = ? AND bDel = ? AND bSale = ?  
2019-05-20 16:44:45 main ==> Parameters: 141(Integer), 0(Integer), 1(Integer) 
2019-05-20 16:44:45 main ==>  Preparing: select lID, sName, sMasterPic, fPrice, fShowPrice, lStock, lSale, sPic, ProductCatID, PathID from Product WHERE ProductCatID = ? AND bDel = ? AND bSale = ?  
2019-05-20 16:44:45 main ==> Parameters: 141(Integer), 0(Integer), 1(Integer) 
2019-05-20 16:44:45 main <==      Total: 0 
2019-05-20 16:44:45 main 返回数据:{"data":{"totol":0,"current":1,"pages":0,"size":20,"records":[]},"message":"操作成功","status":10000} 
2019-05-20 16:44:45 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@3044e9c7: startup date [Mon May 20 16:44:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b956878 
2019-05-20 16:44:45 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 16:44:45 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 16:44:45 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 16:44:45 Thread-13 Stopping beans in phase 0 
2019-05-20 16:44:46 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 16:44:46 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 16:44:46 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 16:44:46 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 16:44:46 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 16:44:46 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 16:44:46 Thread-13 Disable delta property : false 
2019-05-20 16:44:46 Thread-13 Single vip registry refresh property : null 
2019-05-20 16:44:46 Thread-13 Force full registry fetch : false 
2019-05-20 16:44:46 Thread-13 Application is null : false 
2019-05-20 16:44:46 Thread-13 Registered Applications size is zero : true 
2019-05-20 16:44:46 Thread-13 Application version is -1: true 
2019-05-20 16:44:46 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 16:44:47 Thread-13 The response status is 200 
2019-05-20 16:44:47 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 16:44:47 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 16:44:47 Thread-13 Discovery Client initialized at timestamp 1558341887321 with initial instances count: 0 
2019-05-20 16:44:47 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 16:44:50 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 16:44:50 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 16:44:50 Thread-13 Unregistering ... 
2019-05-20 16:44:50 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 16:44:50 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 16:44:50 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 16:44:50 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 16:44:50 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 16:44:50 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 16:53:14 main The following profiles are active: dev 
2019-05-20 16:53:17 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 16:53:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f3f0fae 
2019-05-20 16:53:18 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 16:53:19 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 16:53:19 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 16:53:19 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$46382a28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:53:20 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$62522d25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:53:21 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 16:53:25 main Using default implementation for ThreadExecutor 
2019-05-20 16:53:25 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 16:53:25 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 16:53:25 main RAMJobStore initialized. 
2019-05-20 16:53:25 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 16:53:25 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 16:53:25 main Quartz scheduler version: 2.3.0 
2019-05-20 16:53:25 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6f926d01 
2019-05-20 16:53:26 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:53:26 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:53:26 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:53:26 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:53:26 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:53:26 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 16:53:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f3f0fae 
2019-05-20 16:53:26 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 16:53:26 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 16:53:26 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 16:53:26 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:53:26 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 16:53:26 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 16:53:26 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:53:26 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:53:26 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:53:29 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 16:53:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f3f0fae] and template loader path [classpath:/templates/] 
2019-05-20 16:53:29 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 16:53:29 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 16:53:29 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:53:29 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:53:29 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:53:29 main Starting beans in phase 0 
2019-05-20 16:53:29 main Starting beans in phase 2147483647 
2019-05-20 16:53:29 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 16:53:29 main Started ProductControllerTest in 17.528 seconds (JVM running for 20.023) 
2019-05-20 16:53:30 main Initializing Spring FrameworkServlet '' 
2019-05-20 16:53:30 main FrameworkServlet '': initialization started 
2019-05-20 16:53:30 main FrameworkServlet '': initialization completed in 29 ms 
2019-05-20 16:53:30 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 16:53:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f3f0fae 
2019-05-20 16:53:30 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 16:53:30 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 16:53:30 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 16:53:30 Thread-15 Stopping beans in phase 0 
2019-05-20 16:53:30 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 16:53:30 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 16:53:30 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 16:53:30 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 16:53:30 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 16:53:31 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 16:53:31 Thread-15 Disable delta property : false 
2019-05-20 16:53:31 Thread-15 Single vip registry refresh property : null 
2019-05-20 16:53:31 Thread-15 Force full registry fetch : false 
2019-05-20 16:53:31 Thread-15 Application is null : false 
2019-05-20 16:53:31 Thread-15 Registered Applications size is zero : true 
2019-05-20 16:53:31 Thread-15 Application version is -1: true 
2019-05-20 16:53:31 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 16:53:31 Thread-15 The response status is 200 
2019-05-20 16:53:31 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 16:53:31 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 16:53:31 Thread-15 Discovery Client initialized at timestamp 1558342411688 with initial instances count: 0 
2019-05-20 16:53:31 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 16:53:34 Thread-15 Unregistering ... 
2019-05-20 16:53:34 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 16:53:34 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 16:53:34 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 16:53:34 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 16:53:34 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 16:53:34 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 16:55:24 main The following profiles are active: dev 
2019-05-20 16:55:27 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3289079a: startup date [Mon May 20 16:55:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f0cb5a1 
2019-05-20 16:55:28 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 16:55:29 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 16:55:29 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 16:55:30 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$25de3e98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:55:30 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$41f84195] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 16:55:31 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 16:55:36 main Using default implementation for ThreadExecutor 
2019-05-20 16:55:36 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 16:55:36 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 16:55:36 main RAMJobStore initialized. 
2019-05-20 16:55:36 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 16:55:36 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 16:55:36 main Quartz scheduler version: 2.3.0 
2019-05-20 16:55:37 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@32430075 
2019-05-20 16:55:37 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:55:37 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:55:37 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 16:55:37 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 16:55:37 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:55:37 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3289079a: startup date [Mon May 20 16:55:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f0cb5a1 
2019-05-20 16:55:38 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 16:55:38 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:55:38 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 16:55:38 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 16:55:38 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 16:55:38 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 16:55:38 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:55:38 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:55:38 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 16:55:40 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@3289079a: startup date [Mon May 20 16:55:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f0cb5a1] and template loader path [classpath:/templates/] 
2019-05-20 16:55:40 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 16:55:41 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 16:55:41 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:55:41 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 16:55:41 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 16:55:41 main Starting beans in phase 0 
2019-05-20 16:55:41 main Starting beans in phase 2147483647 
2019-05-20 16:55:41 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 16:55:41 main Started ProductControllerTest in 19.403 seconds (JVM running for 21.994) 
2019-05-20 16:55:41 main Initializing Spring FrameworkServlet '' 
2019-05-20 16:55:41 main FrameworkServlet '': initialization started 
2019-05-20 16:55:41 main FrameworkServlet '': initialization completed in 33 ms 
2019-05-20 16:55:41 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@3289079a: startup date [Mon May 20 16:55:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f0cb5a1 
2019-05-20 16:55:41 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 16:55:41 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 16:55:41 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 16:55:41 Thread-15 Stopping beans in phase 0 
2019-05-20 16:55:42 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 16:55:42 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 16:55:42 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 16:55:42 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 16:55:42 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 16:55:42 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 16:55:43 Thread-15 Disable delta property : false 
2019-05-20 16:55:43 Thread-15 Single vip registry refresh property : null 
2019-05-20 16:55:43 Thread-15 Force full registry fetch : false 
2019-05-20 16:55:43 Thread-15 Application is null : false 
2019-05-20 16:55:43 Thread-15 Registered Applications size is zero : true 
2019-05-20 16:55:43 Thread-15 Application version is -1: true 
2019-05-20 16:55:43 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 16:55:43 Thread-15 The response status is 200 
2019-05-20 16:55:43 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 16:55:43 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 16:55:43 Thread-15 Discovery Client initialized at timestamp 1558342543333 with initial instances count: 0 
2019-05-20 16:55:43 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 16:55:46 Thread-15 Unregistering ... 
2019-05-20 16:55:46 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 16:55:46 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 16:55:46 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 16:55:46 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 16:55:46 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 16:55:46 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:04:58 main The following profiles are active: dev 
2019-05-20 17:05:01 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@334ebcaa: startup date [Mon May 20 17:05:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a0ac48e 
2019-05-20 17:05:02 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:05:04 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:05:04 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:05:04 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$164d80e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:05:05 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$326783de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:05:06 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:05:10 main Using default implementation for ThreadExecutor 
2019-05-20 17:05:10 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:05:10 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:05:10 main RAMJobStore initialized. 
2019-05-20 17:05:10 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:05:10 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:05:10 main Quartz scheduler version: 2.3.0 
2019-05-20 17:05:10 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2a5ed225 
2019-05-20 17:05:11 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:05:11 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:05:11 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:05:11 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:05:11 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:05:11 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@334ebcaa: startup date [Mon May 20 17:05:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a0ac48e 
2019-05-20 17:05:11 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:05:11 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:05:11 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:05:11 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:05:11 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:05:11 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:05:11 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:05:11 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:05:11 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:05:14 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@334ebcaa: startup date [Mon May 20 17:05:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a0ac48e] and template loader path [classpath:/templates/] 
2019-05-20 17:05:14 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:05:15 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:05:15 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:05:15 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:05:15 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:05:15 main Starting beans in phase 0 
2019-05-20 17:05:15 main Starting beans in phase 2147483647 
2019-05-20 17:05:15 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:05:15 main Started ProductControllerTest in 19.129 seconds (JVM running for 21.876) 
2019-05-20 17:05:15 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:05:15 main FrameworkServlet '': initialization started 
2019-05-20 17:05:15 main FrameworkServlet '': initialization completed in 31 ms 
2019-05-20 17:05:15 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@334ebcaa: startup date [Mon May 20 17:05:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a0ac48e 
2019-05-20 17:05:15 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 17:05:15 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:05:15 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 17:05:15 Thread-15 Stopping beans in phase 0 
2019-05-20 17:05:15 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 17:05:16 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:05:16 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:05:16 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 17:05:16 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 17:05:16 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 17:05:16 Thread-15 Disable delta property : false 
2019-05-20 17:05:16 Thread-15 Single vip registry refresh property : null 
2019-05-20 17:05:16 Thread-15 Force full registry fetch : false 
2019-05-20 17:05:16 Thread-15 Application is null : false 
2019-05-20 17:05:16 Thread-15 Registered Applications size is zero : true 
2019-05-20 17:05:16 Thread-15 Application version is -1: true 
2019-05-20 17:05:16 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 17:05:17 Thread-15 The response status is 200 
2019-05-20 17:05:17 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:05:17 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:05:17 Thread-15 Discovery Client initialized at timestamp 1558343117310 with initial instances count: 0 
2019-05-20 17:05:17 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 17:05:20 Thread-15 Unregistering ... 
2019-05-20 17:05:20 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:05:20 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 17:05:20 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 17:05:20 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:05:20 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:05:20 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:06:02 main The following profiles are active: dev 
2019-05-20 17:06:05 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@17461db: startup date [Mon May 20 17:06:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4349754 
2019-05-20 17:06:06 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:06:07 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:06:07 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:06:07 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d67dc393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:06:08 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f297c690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:06:09 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:06:14 main Using default implementation for ThreadExecutor 
2019-05-20 17:06:14 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:06:14 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:06:14 main RAMJobStore initialized. 
2019-05-20 17:06:14 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:06:14 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:06:14 main Quartz scheduler version: 2.3.0 
2019-05-20 17:06:14 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4803bf73 
2019-05-20 17:06:15 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:06:15 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:06:15 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:06:15 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:06:15 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:06:15 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@17461db: startup date [Mon May 20 17:06:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4349754 
2019-05-20 17:06:15 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:06:15 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:06:15 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:06:15 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:06:15 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:06:15 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:06:15 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:06:15 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:06:15 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:06:18 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@17461db: startup date [Mon May 20 17:06:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4349754] and template loader path [classpath:/templates/] 
2019-05-20 17:06:18 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:06:18 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:06:18 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:06:18 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:06:18 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:06:18 main Starting beans in phase 0 
2019-05-20 17:06:18 main Starting beans in phase 2147483647 
2019-05-20 17:06:18 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:06:18 main Started ProductControllerTest in 18.844 seconds (JVM running for 21.271) 
2019-05-20 17:06:19 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:06:19 main FrameworkServlet '': initialization started 
2019-05-20 17:06:19 main FrameworkServlet '': initialization completed in 31 ms 
2019-05-20 17:06:19 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@17461db: startup date [Mon May 20 17:06:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4349754 
2019-05-20 17:06:19 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 17:06:19 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:06:19 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 17:06:19 Thread-13 Stopping beans in phase 0 
2019-05-20 17:06:19 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 17:06:19 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:06:19 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:06:19 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 17:06:19 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 17:06:20 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 17:06:20 Thread-13 Disable delta property : false 
2019-05-20 17:06:20 Thread-13 Single vip registry refresh property : null 
2019-05-20 17:06:20 Thread-13 Force full registry fetch : false 
2019-05-20 17:06:20 Thread-13 Application is null : false 
2019-05-20 17:06:20 Thread-13 Registered Applications size is zero : true 
2019-05-20 17:06:20 Thread-13 Application version is -1: true 
2019-05-20 17:06:20 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 17:06:20 Thread-13 The response status is 200 
2019-05-20 17:06:20 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:06:20 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:06:20 Thread-13 Discovery Client initialized at timestamp 1558343180682 with initial instances count: 0 
2019-05-20 17:06:20 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 17:06:23 Thread-13 Unregistering ... 
2019-05-20 17:06:23 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:06:23 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 17:06:23 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 17:06:23 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:06:23 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:06:23 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:09:30 main The following profiles are active: dev 
2019-05-20 17:09:33 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5a8ab2: startup date [Mon May 20 17:09:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b08f438 
2019-05-20 17:09:34 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:09:35 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:09:35 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:09:36 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cf7c35aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:09:36 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eb9638a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:09:37 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:09:43 main Using default implementation for ThreadExecutor 
2019-05-20 17:09:43 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:09:43 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:09:43 main RAMJobStore initialized. 
2019-05-20 17:09:43 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:09:43 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:09:43 main Quartz scheduler version: 2.3.0 
2019-05-20 17:09:43 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6b03c35c 
2019-05-20 17:09:43 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:09:43 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:09:43 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:09:43 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:09:43 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:09:44 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5a8ab2: startup date [Mon May 20 17:09:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b08f438 
2019-05-20 17:09:44 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:09:44 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:09:44 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:09:44 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:09:44 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:09:44 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:09:44 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:09:44 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:09:44 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:09:46 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@5a8ab2: startup date [Mon May 20 17:09:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b08f438] and template loader path [classpath:/templates/] 
2019-05-20 17:09:46 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:09:47 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:09:47 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:09:47 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:09:47 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:09:47 main Starting beans in phase 0 
2019-05-20 17:09:47 main Starting beans in phase 2147483647 
2019-05-20 17:09:47 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:09:47 main Started ProductControllerTest in 19.027 seconds (JVM running for 21.677) 
2019-05-20 17:09:47 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:09:47 main FrameworkServlet '': initialization started 
2019-05-20 17:09:48 main FrameworkServlet '': initialization completed in 32 ms 
2019-05-20 17:09:48 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@5a8ab2: startup date [Mon May 20 17:09:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b08f438 
2019-05-20 17:09:48 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 17:09:48 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:09:48 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 17:09:48 Thread-15 Stopping beans in phase 0 
2019-05-20 17:09:48 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 17:09:48 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:09:48 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:09:48 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 17:09:48 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 17:09:49 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 17:09:49 Thread-15 Disable delta property : false 
2019-05-20 17:09:49 Thread-15 Single vip registry refresh property : null 
2019-05-20 17:09:49 Thread-15 Force full registry fetch : false 
2019-05-20 17:09:49 Thread-15 Application is null : false 
2019-05-20 17:09:49 Thread-15 Registered Applications size is zero : true 
2019-05-20 17:09:49 Thread-15 Application version is -1: true 
2019-05-20 17:09:49 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 17:09:49 Thread-15 The response status is 200 
2019-05-20 17:09:49 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:09:49 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:09:49 Thread-15 Discovery Client initialized at timestamp 1558343389793 with initial instances count: 0 
2019-05-20 17:09:49 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 17:09:52 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 17:09:52 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 17:09:52 Thread-15 Unregistering ... 
2019-05-20 17:09:52 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:09:52 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 17:09:52 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 17:09:52 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:09:52 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:09:52 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:17:52 main The following profiles are active: dev 
2019-05-20 17:17:55 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4d18b73a: startup date [Mon May 20 17:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77cb9cd1 
2019-05-20 17:17:56 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:17:57 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:17:57 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:17:58 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$553ba73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:17:58 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$216dbd70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:17:59 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:18:04 main Using default implementation for ThreadExecutor 
2019-05-20 17:18:04 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:18:04 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:18:04 main RAMJobStore initialized. 
2019-05-20 17:18:04 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:18:04 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:18:04 main Quartz scheduler version: 2.3.0 
2019-05-20 17:18:04 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@35451ba6 
2019-05-20 17:18:04 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:18:04 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:18:05 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:18:05 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:18:05 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:18:05 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4d18b73a: startup date [Mon May 20 17:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77cb9cd1 
2019-05-20 17:18:05 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:18:05 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:18:05 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:18:05 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:18:05 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:18:05 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:18:05 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:18:05 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:18:05 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:18:08 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@4d18b73a: startup date [Mon May 20 17:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77cb9cd1] and template loader path [classpath:/templates/] 
2019-05-20 17:18:08 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:18:08 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:18:08 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:18:08 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:18:08 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:18:09 main Starting beans in phase 0 
2019-05-20 17:18:09 main Starting beans in phase 2147483647 
2019-05-20 17:18:09 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:18:09 main Started ProductControllerTest in 19.015 seconds (JVM running for 21.633) 
2019-05-20 17:18:09 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:18:09 main FrameworkServlet '': initialization started 
2019-05-20 17:18:09 main FrameworkServlet '': initialization completed in 82 ms 
2019-05-20 17:18:09 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@4d18b73a: startup date [Mon May 20 17:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77cb9cd1 
2019-05-20 17:18:09 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 17:18:09 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:18:09 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 17:18:09 Thread-13 Stopping beans in phase 0 
2019-05-20 17:18:09 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 17:18:09 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:18:09 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:18:10 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 17:18:10 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 17:18:10 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 17:18:10 Thread-13 Disable delta property : false 
2019-05-20 17:18:10 Thread-13 Single vip registry refresh property : null 
2019-05-20 17:18:10 Thread-13 Force full registry fetch : false 
2019-05-20 17:18:10 Thread-13 Application is null : false 
2019-05-20 17:18:10 Thread-13 Registered Applications size is zero : true 
2019-05-20 17:18:10 Thread-13 Application version is -1: true 
2019-05-20 17:18:10 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 17:18:10 Thread-13 The response status is 200 
2019-05-20 17:18:10 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:18:10 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:18:10 Thread-13 Discovery Client initialized at timestamp 1558343890919 with initial instances count: 0 
2019-05-20 17:18:10 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 17:18:13 Thread-13 Unregistering ... 
2019-05-20 17:18:13 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:18:13 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 17:18:13 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 17:18:13 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:18:13 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:18:13 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:19:11 main The following profiles are active: dev 
2019-05-20 17:19:14 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@788ba63e: startup date [Mon May 20 17:19:14 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@47547132 
2019-05-20 17:19:15 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:19:16 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:19:16 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:19:16 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$90e3937e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:19:17 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$acfd967b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:19:18 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:19:23 main Using default implementation for ThreadExecutor 
2019-05-20 17:19:23 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:19:23 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:19:23 main RAMJobStore initialized. 
2019-05-20 17:19:23 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:19:23 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:19:23 main Quartz scheduler version: 2.3.0 
2019-05-20 17:19:23 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1a45e29f 
2019-05-20 17:19:23 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:19:23 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:19:23 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:19:23 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:19:24 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:19:24 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@788ba63e: startup date [Mon May 20 17:19:14 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@47547132 
2019-05-20 17:19:24 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:19:24 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:19:24 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:19:24 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:19:24 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:19:24 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:19:24 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:19:24 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:19:24 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:19:26 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@788ba63e: startup date [Mon May 20 17:19:14 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@47547132] and template loader path [classpath:/templates/] 
2019-05-20 17:19:26 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:19:27 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:19:27 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:19:27 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:19:27 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:19:27 main Starting beans in phase 0 
2019-05-20 17:19:27 main Starting beans in phase 2147483647 
2019-05-20 17:19:27 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:19:27 main Started ProductControllerTest in 18.316 seconds (JVM running for 20.808) 
2019-05-20 17:19:27 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:19:27 main FrameworkServlet '': initialization started 
2019-05-20 17:19:27 main FrameworkServlet '': initialization completed in 26 ms 
2019-05-20 17:19:28 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@788ba63e: startup date [Mon May 20 17:19:14 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@47547132 
2019-05-20 17:19:28 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 17:19:28 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:19:28 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 17:19:28 Thread-15 Stopping beans in phase 0 
2019-05-20 17:19:28 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 17:19:28 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:19:28 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:19:28 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 17:19:28 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 17:19:29 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 17:19:29 Thread-15 Disable delta property : false 
2019-05-20 17:19:29 Thread-15 Single vip registry refresh property : null 
2019-05-20 17:19:29 Thread-15 Force full registry fetch : false 
2019-05-20 17:19:29 Thread-15 Application is null : false 
2019-05-20 17:19:29 Thread-15 Registered Applications size is zero : true 
2019-05-20 17:19:29 Thread-15 Application version is -1: true 
2019-05-20 17:19:29 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 17:19:29 Thread-15 The response status is 200 
2019-05-20 17:19:29 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:19:29 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:19:29 Thread-15 Discovery Client initialized at timestamp 1558343969418 with initial instances count: 0 
2019-05-20 17:19:29 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 17:19:32 Thread-15 Unregistering ... 
2019-05-20 17:19:32 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:19:32 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 17:19:32 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 17:19:32 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:19:32 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:19:32 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:21:37 main The following profiles are active: dev 
2019-05-20 17:21:41 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@201c3cda: startup date [Mon May 20 17:21:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5af97169 
2019-05-20 17:21:42 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:21:43 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:21:43 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:21:44 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82687d39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:21:44 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9e828036] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:21:45 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:21:50 main Using default implementation for ThreadExecutor 
2019-05-20 17:21:50 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:21:50 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:21:50 main RAMJobStore initialized. 
2019-05-20 17:21:50 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:21:50 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:21:50 main Quartz scheduler version: 2.3.0 
2019-05-20 17:21:50 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@29ae2517 
2019-05-20 17:21:51 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:21:51 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:21:51 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:21:51 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:21:51 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:21:51 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@201c3cda: startup date [Mon May 20 17:21:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5af97169 
2019-05-20 17:21:51 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:21:51 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:21:51 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:21:51 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:21:51 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:21:51 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:21:51 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:21:51 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:21:51 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:21:54 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@201c3cda: startup date [Mon May 20 17:21:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5af97169] and template loader path [classpath:/templates/] 
2019-05-20 17:21:54 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:21:54 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:21:54 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:21:54 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:21:54 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:21:55 main Starting beans in phase 0 
2019-05-20 17:21:55 main Starting beans in phase 2147483647 
2019-05-20 17:21:55 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:21:55 main Started ProductControllerTest in 19.752 seconds (JVM running for 22.246) 
2019-05-20 17:21:55 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:21:55 main FrameworkServlet '': initialization started 
2019-05-20 17:21:55 main FrameworkServlet '': initialization completed in 30 ms 
2019-05-20 17:21:55 main 请求url:http://localhost/v1/product/productList 
2019-05-20 17:21:55 main 请求参数:[141, 1, 20] 
2019-05-20 17:21:55 main ==>  Preparing: SELECT COUNT(1) FROM Product WHERE ProductCatID = ? AND bDel = ? AND bSale = ?  
2019-05-20 17:21:55 main ==> Parameters: 141(Integer), 0(Integer), 1(Integer) 
2019-05-20 17:21:55 main ==>  Preparing: select lID, sName, sMasterPic, fPrice, fShowPrice, lStock, lSale, sPic, ProductCatID, PathID from Product WHERE ProductCatID = ? AND bDel = ? AND bSale = ?  
2019-05-20 17:21:55 main ==> Parameters: 141(Integer), 0(Integer), 1(Integer) 
2019-05-20 17:21:55 main <==      Total: 0 
2019-05-20 17:21:55 main 返回数据:{"data":{"totol":0,"current":1,"pages":0,"size":20,"records":[]},"message":"操作成功","status":10000} 
2019-05-20 17:21:55 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@201c3cda: startup date [Mon May 20 17:21:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5af97169 
2019-05-20 17:21:55 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 17:21:55 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:21:55 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 17:21:55 Thread-13 Stopping beans in phase 0 
2019-05-20 17:21:56 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 17:21:56 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:21:56 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:21:56 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 17:21:56 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 17:21:56 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 17:21:57 Thread-13 Disable delta property : false 
2019-05-20 17:21:57 Thread-13 Single vip registry refresh property : null 
2019-05-20 17:21:57 Thread-13 Force full registry fetch : false 
2019-05-20 17:21:57 Thread-13 Application is null : false 
2019-05-20 17:21:57 Thread-13 Registered Applications size is zero : true 
2019-05-20 17:21:57 Thread-13 Application version is -1: true 
2019-05-20 17:21:57 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 17:21:57 Thread-13 The response status is 200 
2019-05-20 17:21:57 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:21:57 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:21:57 Thread-13 Discovery Client initialized at timestamp 1558344117438 with initial instances count: 0 
2019-05-20 17:21:57 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 17:22:00 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 17:22:00 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 17:22:00 Thread-13 Unregistering ... 
2019-05-20 17:22:00 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:22:00 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 17:22:00 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 17:22:00 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:22:00 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:22:00 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:25:48 main The following profiles are active: dev 
2019-05-20 17:25:51 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@f5b6e78: startup date [Mon May 20 17:25:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@769d513 
2019-05-20 17:25:52 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:25:53 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:25:53 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:25:54 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ba5d4a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:25:54 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$37bfd7a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:25:55 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:26:00 main Using default implementation for ThreadExecutor 
2019-05-20 17:26:00 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:26:00 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:26:00 main RAMJobStore initialized. 
2019-05-20 17:26:00 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:26:00 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:26:00 main Quartz scheduler version: 2.3.0 
2019-05-20 17:26:00 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1a1f22f2 
2019-05-20 17:26:01 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:26:01 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:26:01 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:26:01 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:26:01 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:26:01 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@f5b6e78: startup date [Mon May 20 17:25:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@769d513 
2019-05-20 17:26:01 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:26:01 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:26:01 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:26:01 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:26:01 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:26:01 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:26:01 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:26:01 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:26:01 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:26:04 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@f5b6e78: startup date [Mon May 20 17:25:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@769d513] and template loader path [classpath:/templates/] 
2019-05-20 17:26:04 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:26:05 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:26:05 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:26:05 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:26:05 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:26:05 main Starting beans in phase 0 
2019-05-20 17:26:05 main Starting beans in phase 2147483647 
2019-05-20 17:26:05 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:26:05 main Started ProductControllerTest in 19.305 seconds (JVM running for 21.73) 
2019-05-20 17:26:05 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:26:05 main FrameworkServlet '': initialization started 
2019-05-20 17:26:05 main FrameworkServlet '': initialization completed in 29 ms 
2019-05-20 17:26:05 main 请求url:http://localhost/v1/product/productList 
2019-05-20 17:26:05 main 请求参数:[138, 1, 20] 
2019-05-20 17:26:05 main ==>  Preparing: SELECT COUNT(1) FROM Product WHERE ProductCatID = ? AND bDel = ? AND bSale = ?  
2019-05-20 17:26:05 main ==> Parameters: 138(Integer), 0(Integer), 1(Integer) 
2019-05-20 17:26:05 main ==>  Preparing: select lID, sName, sMasterPic, fPrice, fShowPrice, lStock, lSale, sPic, ProductCatID, PathID from Product WHERE ProductCatID = ? AND bDel = ? AND bSale = ? LIMIT ?,?  
2019-05-20 17:26:05 main ==> Parameters: 138(Integer), 0(Integer), 1(Integer), 0(Long), 20(Long) 
2019-05-20 17:26:05 main <==      Total: 4 
2019-05-20 17:26:05 main 返回数据:{"data":{"totol":4,"current":1,"pages":1,"size":20,"records":[{"fPrice":310.00,"fShowPrice":200.00,"lID":7536,"lSale":0,"lStock":9888,"pathID":"/145/","productCatID":138,"sMasterPic":"http://image.dny.group/userfile/upload/2019-04-08/15547035830027775000121321403126.jpg","sName":"T测试商品201904081403-1  哈哈哈","sPic":"http://image.dny.group/[\"userfile\\/upload\\/2019-04-08\\/15547035830027775000121321403126.jpg\",\"userfile\\/upload\\/2019-04-08\\/15547128270016769300107775801791.jpg\",\"userfile\\/upload\\/2019-04-10\\/15548627090017666400828832939546.jpg\",\"userfile\\/upload\\/2019-04-10\\/15548910580025591100120379846819.jpg\"]"},{"fPrice":8.00,"fShowPrice":10.00,"lID":7537,"lSale":0,"lStock":139,"pathID":"/138/","productCatID":138,"sMasterPic":"http://image.dny.group/userfile/upload/2019-04-18/15555766520090780000211959981295.jpg","sName":"apple- cloud","sPic":"http://image.dny.group/[\"userfile\\/upload\\/2019-04-18\\/15555766520090780000211959981295.jpg\"]"},{"fPrice":2.00,"fShowPrice":4.00,"lID":7538,"lSale":0,"lStock":3321,"pathID":"/138/","productCatID":138,"sMasterPic":"http://image.dny.group/userfile/upload/2019-04-18/15555768770022480000107003235141.jpg","sName":"dddd- cloud","sPic":"http://image.dny.group/[\"userfile\\/upload\\/2019-04-18\\/15555768770022480000107003235141.jpg\"]"},{"fPrice":7.00,"fShowPrice":8.00,"lID":7539,"lSale":0,"lStock":433,"pathID":"/138/","productCatID":138,"sMasterPic":"http://image.dny.group/userfile/upload/2019-04-19/15556642130045300100654532449619.jpg","sName":"test 88888 cloud","sPic":"http://image.dny.group/[\"userfile\\/upload\\/2019-04-19\\/15556642130045300100654532449619.jpg\"]"}]},"message":"操作成功","status":10000} 
2019-05-20 17:26:05 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@f5b6e78: startup date [Mon May 20 17:25:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@769d513 
2019-05-20 17:26:05 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 17:26:05 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:26:05 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 17:26:05 Thread-15 Stopping beans in phase 0 
2019-05-20 17:26:06 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 17:26:06 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:26:06 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:26:06 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 17:26:06 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 17:26:07 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 17:26:07 Thread-15 Disable delta property : false 
2019-05-20 17:26:07 Thread-15 Single vip registry refresh property : null 
2019-05-20 17:26:07 Thread-15 Force full registry fetch : false 
2019-05-20 17:26:07 Thread-15 Application is null : false 
2019-05-20 17:26:07 Thread-15 Registered Applications size is zero : true 
2019-05-20 17:26:07 Thread-15 Application version is -1: true 
2019-05-20 17:26:07 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 17:26:07 Thread-15 The response status is 200 
2019-05-20 17:26:07 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:26:07 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:26:07 Thread-15 Discovery Client initialized at timestamp 1558344367491 with initial instances count: 0 
2019-05-20 17:26:07 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 17:26:10 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 17:26:10 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 17:26:10 Thread-15 Unregistering ... 
2019-05-20 17:26:10 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:26:10 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 17:26:10 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 17:26:10 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:26:10 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:26:10 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:29:01 main The following profiles are active: dev 
2019-05-20 17:29:05 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5a0bef24: startup date [Mon May 20 17:29:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a68135e 
2019-05-20 17:29:06 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:29:07 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:29:07 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:29:07 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe46e661] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:29:08 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1a60e95e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:29:09 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:29:14 main Using default implementation for ThreadExecutor 
2019-05-20 17:29:14 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:29:14 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:29:14 main RAMJobStore initialized. 
2019-05-20 17:29:14 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:29:14 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:29:14 main Quartz scheduler version: 2.3.0 
2019-05-20 17:29:14 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1f235a0a 
2019-05-20 17:29:15 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:29:15 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:29:15 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:29:15 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:29:15 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:29:15 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5a0bef24: startup date [Mon May 20 17:29:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a68135e 
2019-05-20 17:29:15 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:29:15 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:29:15 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:29:15 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:29:15 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:29:15 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:29:15 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:29:15 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:29:15 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:29:17 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@5a0bef24: startup date [Mon May 20 17:29:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a68135e] and template loader path [classpath:/templates/] 
2019-05-20 17:29:17 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:29:18 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:29:18 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:29:18 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:29:18 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:29:18 main Starting beans in phase 0 
2019-05-20 17:29:18 main Starting beans in phase 2147483647 
2019-05-20 17:29:18 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:29:18 main Started ProductControllerTest in 19.514 seconds (JVM running for 22.052) 
2019-05-20 17:29:18 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:29:18 main FrameworkServlet '': initialization started 
2019-05-20 17:29:19 main FrameworkServlet '': initialization completed in 34 ms 
2019-05-20 17:29:19 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@5a0bef24: startup date [Mon May 20 17:29:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a68135e 
2019-05-20 17:29:19 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 17:29:19 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:29:19 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 17:29:19 Thread-13 Stopping beans in phase 0 
2019-05-20 17:29:19 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 17:29:19 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:29:19 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:29:19 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 17:29:19 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 17:29:20 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 17:29:20 Thread-13 Disable delta property : false 
2019-05-20 17:29:20 Thread-13 Single vip registry refresh property : null 
2019-05-20 17:29:20 Thread-13 Force full registry fetch : false 
2019-05-20 17:29:20 Thread-13 Application is null : false 
2019-05-20 17:29:20 Thread-13 Registered Applications size is zero : true 
2019-05-20 17:29:20 Thread-13 Application version is -1: true 
2019-05-20 17:29:20 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 17:29:20 Thread-13 The response status is 200 
2019-05-20 17:29:20 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:29:20 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:29:20 Thread-13 Discovery Client initialized at timestamp 1558344560600 with initial instances count: 0 
2019-05-20 17:29:20 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 17:29:23 Thread-13 Unregistering ... 
2019-05-20 17:29:23 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:29:23 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 17:29:23 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 17:29:23 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:29:23 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:29:23 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:34:01 main The following profiles are active: dev 
2019-05-20 17:34:04 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 17:34:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66f659e6 
2019-05-20 17:34:05 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:34:06 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:34:06 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:34:06 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea07b2a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:34:06 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$621b5a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:34:08 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:34:13 main Using default implementation for ThreadExecutor 
2019-05-20 17:34:13 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:34:13 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:34:13 main RAMJobStore initialized. 
2019-05-20 17:34:13 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:34:13 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:34:13 main Quartz scheduler version: 2.3.0 
2019-05-20 17:34:13 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1755aee6 
2019-05-20 17:34:13 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:34:13 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:34:13 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:34:13 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:34:13 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:34:14 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 17:34:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66f659e6 
2019-05-20 17:34:14 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:34:14 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:34:14 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:34:14 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:34:14 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:34:14 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:34:14 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:34:14 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:34:14 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:34:16 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 17:34:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66f659e6] and template loader path [classpath:/templates/] 
2019-05-20 17:34:16 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:34:17 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:34:17 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:34:17 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:34:17 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:34:17 main Starting beans in phase 0 
2019-05-20 17:34:17 main Starting beans in phase 2147483647 
2019-05-20 17:34:17 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:34:17 main Started ProductControllerTest in 18.383 seconds (JVM running for 21.026) 
2019-05-20 17:34:17 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:34:17 main FrameworkServlet '': initialization started 
2019-05-20 17:34:17 main FrameworkServlet '': initialization completed in 27 ms 
2019-05-20 17:34:17 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@a5bbaec: startup date [Mon May 20 17:34:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66f659e6 
2019-05-20 17:34:17 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 17:34:17 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:34:17 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 17:34:17 Thread-13 Stopping beans in phase 0 
2019-05-20 17:34:17 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 17:34:18 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:34:18 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:34:18 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 17:34:18 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 17:34:18 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 17:34:18 Thread-13 Disable delta property : false 
2019-05-20 17:34:18 Thread-13 Single vip registry refresh property : null 
2019-05-20 17:34:18 Thread-13 Force full registry fetch : false 
2019-05-20 17:34:18 Thread-13 Application is null : false 
2019-05-20 17:34:18 Thread-13 Registered Applications size is zero : true 
2019-05-20 17:34:18 Thread-13 Application version is -1: true 
2019-05-20 17:34:18 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 17:34:19 Thread-13 The response status is 200 
2019-05-20 17:34:19 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:34:19 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:34:19 Thread-13 Discovery Client initialized at timestamp 1558344859207 with initial instances count: 0 
2019-05-20 17:34:19 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 17:34:22 Thread-13 Unregistering ... 
2019-05-20 17:34:22 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:34:22 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 17:34:22 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 17:34:22 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:34:22 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:34:22 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:36:48 main The following profiles are active: dev 
2019-05-20 17:36:51 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6c1cfa53: startup date [Mon May 20 17:36:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c6ee758 
2019-05-20 17:36:52 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:36:53 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:36:53 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:36:53 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1b5b41a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:36:54 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3775449e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:36:55 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:37:00 main Using default implementation for ThreadExecutor 
2019-05-20 17:37:00 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:37:00 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:37:00 main RAMJobStore initialized. 
2019-05-20 17:37:00 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:37:00 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:37:00 main Quartz scheduler version: 2.3.0 
2019-05-20 17:37:00 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1cf4d454 
2019-05-20 17:37:01 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:37:01 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:37:01 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:37:01 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:37:01 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:37:01 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6c1cfa53: startup date [Mon May 20 17:36:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c6ee758 
2019-05-20 17:37:01 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:37:01 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:37:01 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:37:01 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:37:01 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:37:01 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:37:01 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:37:01 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:37:01 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:37:03 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@6c1cfa53: startup date [Mon May 20 17:36:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c6ee758] and template loader path [classpath:/templates/] 
2019-05-20 17:37:03 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:37:04 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:37:04 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:37:04 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:37:04 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:37:04 main Starting beans in phase 0 
2019-05-20 17:37:04 main Starting beans in phase 2147483647 
2019-05-20 17:37:04 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:37:04 main Started ProductControllerTest in 19.084 seconds (JVM running for 21.677) 
2019-05-20 17:37:04 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:37:04 main FrameworkServlet '': initialization started 
2019-05-20 17:37:05 main FrameworkServlet '': initialization completed in 32 ms 
2019-05-20 17:37:05 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@6c1cfa53: startup date [Mon May 20 17:36:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c6ee758 
2019-05-20 17:37:05 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 17:37:05 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:37:05 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 17:37:05 Thread-13 Stopping beans in phase 0 
2019-05-20 17:37:05 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 17:37:05 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:37:05 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:37:05 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 17:37:05 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 17:37:06 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 17:37:06 Thread-13 Disable delta property : false 
2019-05-20 17:37:06 Thread-13 Single vip registry refresh property : null 
2019-05-20 17:37:06 Thread-13 Force full registry fetch : false 
2019-05-20 17:37:06 Thread-13 Application is null : false 
2019-05-20 17:37:06 Thread-13 Registered Applications size is zero : true 
2019-05-20 17:37:06 Thread-13 Application version is -1: true 
2019-05-20 17:37:06 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 17:37:06 Thread-13 The response status is 200 
2019-05-20 17:37:06 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:37:06 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:37:06 Thread-13 Discovery Client initialized at timestamp 1558345026615 with initial instances count: 0 
2019-05-20 17:37:06 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 17:37:09 Thread-13 Unregistering ... 
2019-05-20 17:37:09 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:37:09 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 17:37:09 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 17:37:09 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:37:09 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:37:09 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 17:39:42 main The following profiles are active: dev 
2019-05-20 17:39:45 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@12a14b74: startup date [Mon May 20 17:39:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f966492 
2019-05-20 17:39:46 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 17:39:47 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 17:39:47 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 17:39:48 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$31d87922] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:39:48 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4df27c1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 17:39:49 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 17:39:54 main Using default implementation for ThreadExecutor 
2019-05-20 17:39:54 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 17:39:54 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 17:39:54 main RAMJobStore initialized. 
2019-05-20 17:39:54 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 17:39:54 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 17:39:54 main Quartz scheduler version: 2.3.0 
2019-05-20 17:39:54 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@60f1f95b 
2019-05-20 17:39:55 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:39:55 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:39:55 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 17:39:55 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 17:39:55 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:39:55 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@12a14b74: startup date [Mon May 20 17:39:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f966492 
2019-05-20 17:39:55 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 17:39:55 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 17:39:55 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 17:39:55 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 17:39:55 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 17:39:55 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 17:39:55 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:39:55 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:39:55 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 17:39:58 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@12a14b74: startup date [Mon May 20 17:39:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f966492] and template loader path [classpath:/templates/] 
2019-05-20 17:39:58 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 17:39:58 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 17:39:58 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:39:58 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 17:39:58 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 17:39:58 main Starting beans in phase 0 
2019-05-20 17:39:58 main Starting beans in phase 2147483647 
2019-05-20 17:39:58 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 17:39:58 main Started ProductControllerTest in 18.625 seconds (JVM running for 21.035) 
2019-05-20 17:39:59 main Initializing Spring FrameworkServlet '' 
2019-05-20 17:39:59 main FrameworkServlet '': initialization started 
2019-05-20 17:39:59 main FrameworkServlet '': initialization completed in 27 ms 
2019-05-20 17:39:59 Thread-15 Closing org.springframework.web.context.support.GenericWebApplicationContext@12a14b74: startup date [Mon May 20 17:39:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f966492 
2019-05-20 17:39:59 Thread-15 Setting initial instance status as: STARTING 
2019-05-20 17:39:59 Thread-15 Unregistering application service-api with eureka with status DOWN 
2019-05-20 17:39:59 Thread-15 Stopping beans in phase 2147483647 
2019-05-20 17:39:59 Thread-15 Stopping beans in phase 0 
2019-05-20 17:39:59 Thread-15 Initializing Eureka in region us-east-1 
2019-05-20 17:39:59 Thread-15 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 17:39:59 Thread-15 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 17:39:59 Thread-15 Using XML encoding codec XStreamXml 
2019-05-20 17:39:59 Thread-15 Using XML decoding codec XStreamXml 
2019-05-20 17:40:00 Thread-15 Resolving eureka endpoints via configuration 
2019-05-20 17:40:00 Thread-15 Disable delta property : false 
2019-05-20 17:40:00 Thread-15 Single vip registry refresh property : null 
2019-05-20 17:40:00 Thread-15 Force full registry fetch : false 
2019-05-20 17:40:00 Thread-15 Application is null : false 
2019-05-20 17:40:00 Thread-15 Registered Applications size is zero : true 
2019-05-20 17:40:00 Thread-15 Application version is -1: true 
2019-05-20 17:40:00 Thread-15 Getting all instance registry info from the eureka server 
2019-05-20 17:40:00 Thread-15 The response status is 200 
2019-05-20 17:40:00 Thread-15 Starting heartbeat executor: renew interval is: 30 
2019-05-20 17:40:00 Thread-15 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 17:40:00 Thread-15 Discovery Client initialized at timestamp 1558345200644 with initial instances count: 0 
2019-05-20 17:40:00 Thread-15 Shutting down DiscoveryClient ... 
2019-05-20 17:40:03 Thread-15 Unregistering ... 
2019-05-20 17:40:03 Thread-15 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 17:40:03 Thread-15 Completed shut down of DiscoveryClient 
2019-05-20 17:40:03 Thread-15 Shutting down Quartz Scheduler 
2019-05-20 17:40:03 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 17:40:03 Thread-15 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 17:40:03 Thread-15 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 18:09:35 main The following profiles are active: dev 
2019-05-20 18:09:39 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 18:09:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d 
2019-05-20 18:09:40 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 18:09:41 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 18:09:41 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 18:09:41 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1d63d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 18:09:41 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$863766d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 18:09:42 main Warn: Could not find @TableId in Class: group.dny.api.entity.AccessToken. 
2019-05-20 18:09:47 main Using default implementation for ThreadExecutor 
2019-05-20 18:09:47 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 18:09:47 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 18:09:47 main RAMJobStore initialized. 
2019-05-20 18:09:47 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 18:09:47 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 18:09:47 main Quartz scheduler version: 2.3.0 
2019-05-20 18:09:47 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@40538370 
2019-05-20 18:09:47 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 18:09:47 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 18:09:47 main No URLs will be polled as dynamic configuration sources. 
2019-05-20 18:09:47 main To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
2019-05-20 18:09:47 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 18:09:47 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 18:09:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d 
2019-05-20 18:09:48 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 18:09:48 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 18:09:48 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 18:09:48 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 18:09:48 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 18:09:48 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 18:09:48 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 18:09:48 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 18:09:48 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 18:09:50 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 18:09:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d] and template loader path [classpath:/templates/] 
2019-05-20 18:09:50 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 18:09:50 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 18:09:50 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 18:09:50 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 18:09:50 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 18:09:50 main Starting beans in phase 0 
2019-05-20 18:09:50 main Starting beans in phase 2147483647 
2019-05-20 18:09:50 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 18:09:50 main Started AreaControllerTest in 16.498 seconds (JVM running for 17.816) 
2019-05-20 18:09:50 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:50 main FrameworkServlet '': initialization started 
2019-05-20 18:09:50 main FrameworkServlet '': initialization completed in 27 ms 
2019-05-20 18:09:50 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:50 main FrameworkServlet '': initialization started 
2019-05-20 18:09:50 main FrameworkServlet '': initialization completed in 7 ms 
2019-05-20 18:09:50 main Neither @ContextConfiguration nor @ContextHierarchy found for test class [group.dny.api.controller.ProductControllerTest], using SpringBootContextLoader 
2019-05-20 18:09:50 main Could not detect default resource locations for test class [group.dny.api.controller.ProductControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2019-05-20 18:09:51 main Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] 
2019-05-20 18:09:51 main Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@14d36bb2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@432448, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4452e13c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4d964c9e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@42172065, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b6f3d0b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@8e77c5b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@776a3365, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c0521e5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2e20c20b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1d167630, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3bc18fec] 
2019-05-20 18:09:51 main The following profiles are active: dev 
2019-05-20 18:09:51 main Refreshing org.springframework.web.context.support.GenericWebApplicationContext@416c1b0: startup date [Mon May 20 18:09:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac2c5a1 
2019-05-20 18:09:52 main Overriding bean definition for bean 'tokenFilter' with a different definition: replacing [Generic bean: class [group.dny.api.configuration.TokenFilter]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\phpStudy\PHPTutorial\WWW\dnycloud\api\service-api\target\classes\group\dny\api\configuration\TokenFilter.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webConfig; factoryMethodName=tokenFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [group/dny/api/configuration/WebConfig.class]] 
2019-05-20 18:09:52 main BeanFactory id=ed441a0d-d69e-3912-85cf-c950b297b9b0 
2019-05-20 18:09:52 main JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
2019-05-20 18:09:52 main Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1d63d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 18:09:52 main Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$863766d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2019-05-20 18:09:55 Quartz Scheduler [scheduler] Starting Quartz Scheduler now, after delay of 5 seconds 
2019-05-20 18:09:55 Quartz Scheduler [scheduler] Scheduler scheduler_$_NON_CLUSTERED started. 
2019-05-20 18:09:55 main Using default implementation for ThreadExecutor 
2019-05-20 18:09:55 main Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 
2019-05-20 18:09:55 main Quartz Scheduler v.2.3.0 created. 
2019-05-20 18:09:55 main RAMJobStore initialized. 
2019-05-20 18:09:55 main Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.
 
2019-05-20 18:09:55 main Quartz scheduler 'scheduler' initialized from an externally provided properties instance. 
2019-05-20 18:09:55 main Quartz scheduler version: 2.3.0 
2019-05-20 18:09:55 main JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@518b0c12 
2019-05-20 18:09:56 main Netflix ConfigurationManager has already been installed, unable to re-install 
2019-05-20 18:09:56 main Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 18:09:56 main Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@416c1b0: startup date [Mon May 20 18:09:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac2c5a1 
2019-05-20 18:09:56 main Mapped "{[/v1/product/stockAndPrice],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.stockAndPrice(java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/product/productList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.productList(java.lang.Integer,java.lang.Integer,java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/product/categoryList],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.categoryList() 
2019-05-20 18:09:56 main Mapped "{[/v1/product/detail],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.detail(java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/product/ship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ProductController.ship(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/area/list],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.list(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/area/city],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.AreaController.city(java.lang.String,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/config],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.ConfigController.index(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/status],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.status(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/submit],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/cancel],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.cancel(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/confirmReceived],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmReceived(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/confirmPay],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.confirmPay(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/order/modifyAddress],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.OrderController.modifyAddress(group.dny.api.component.model.OrderModel) 
2019-05-20 18:09:56 main Mapped "{[/v1/refund/apply],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.apply(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/refund/status],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.status(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/refund/cancel],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.cancel(java.lang.String,java.lang.String,java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/refund/setrefund],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.setrefund(java.lang.String,java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/refund/returnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.returnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/refund/modifyreturnship],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.RefundController.modifyreturnship(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/v1/supplier/list],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.list(java.lang.String,java.lang.Integer,java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/supplier/info],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.SupplierController.info(java.lang.Integer) 
2019-05-20 18:09:56 main Mapped "{[/v1/user/token],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.UserController.token(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/wholesale/order/submit],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.submit(group.dny.api.component.model.OrderModel) 
2019-05-20 18:09:56 main Mapped "{[/wholesale/order/cancel],methods=[POST]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.cancel(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/wholesale/order/ship],methods=[POST],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.ship(java.lang.String,java.lang.String,java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/wholesale/order/confirmPay],produces=[application/json]}" onto public group.dny.api.dto.ResultDTO group.dny.api.controller.wholesale.WholesalesOrderController.confirmPay(java.lang.String) 
2019-05-20 18:09:56 main Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2019-05-20 18:09:56 main Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 18:09:56 main Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 18:09:56 main Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2019-05-20 18:09:57 main SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@416c1b0: startup date [Mon May 20 18:09:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac2c5a1] and template loader path [classpath:/templates/] 
2019-05-20 18:09:57 main ClassTemplateLoader for Spring macros added to FreeMarker configuration 
2019-05-20 18:09:57 main Exposing 2 endpoint(s) beneath base path '/actuator' 
2019-05-20 18:09:57 main Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 18:09:57 main Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2019-05-20 18:09:57 main Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2019-05-20 18:09:58 main Starting beans in phase 0 
2019-05-20 18:09:58 main Starting beans in phase 2147483647 
2019-05-20 18:09:58 main Will start Quartz Scheduler [scheduler] in 5 seconds 
2019-05-20 18:09:58 main Started ProductControllerTest in 6.97 seconds (JVM running for 25.034) 
2019-05-20 18:09:58 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:58 main FrameworkServlet '': initialization started 
2019-05-20 18:09:58 main FrameworkServlet '': initialization completed in 18 ms 
2019-05-20 18:09:58 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:58 main FrameworkServlet '': initialization started 
2019-05-20 18:09:58 main FrameworkServlet '': initialization completed in 3 ms 
2019-05-20 18:09:58 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:58 main FrameworkServlet '': initialization started 
2019-05-20 18:09:58 main FrameworkServlet '': initialization completed in 4 ms 
2019-05-20 18:09:58 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:58 main FrameworkServlet '': initialization started 
2019-05-20 18:09:58 main FrameworkServlet '': initialization completed in 4 ms 
2019-05-20 18:09:58 main Initializing Spring FrameworkServlet '' 
2019-05-20 18:09:58 main FrameworkServlet '': initialization started 
2019-05-20 18:09:58 main FrameworkServlet '': initialization completed in 4 ms 
2019-05-20 18:09:58 Thread-13 Closing org.springframework.web.context.support.GenericWebApplicationContext@720653c2: startup date [Mon May 20 18:09:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@878452d 
2019-05-20 18:09:58 Thread-13 Setting initial instance status as: STARTING 
2019-05-20 18:09:58 Thread-13 Unregistering application service-api with eureka with status DOWN 
2019-05-20 18:09:58 Thread-13 Stopping beans in phase 2147483647 
2019-05-20 18:09:58 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 18:09:58 Thread-13 Stopping beans in phase 0 
2019-05-20 18:09:58 Thread-13 Initializing Eureka in region us-east-1 
2019-05-20 18:09:58 Thread-23 Closing org.springframework.web.context.support.GenericWebApplicationContext@416c1b0: startup date [Mon May 20 18:09:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac2c5a1 
2019-05-20 18:09:58 Thread-23 Setting initial instance status as: STARTING 
2019-05-20 18:09:58 Thread-23 Unregistering application service-api with eureka with status DOWN 
2019-05-20 18:09:58 Thread-23 Stopping beans in phase 2147483647 
2019-05-20 18:09:58 Thread-23 Stopping beans in phase 0 
2019-05-20 18:09:58 Thread-23 Initializing Eureka in region us-east-1 
2019-05-20 18:09:58 Thread-23 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 18:09:58 Thread-13 Using JSON encoding codec LegacyJacksonJson 
2019-05-20 18:09:58 Thread-13 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 18:09:58 Thread-23 Using JSON decoding codec LegacyJacksonJson 
2019-05-20 18:09:58 Thread-23 Using XML encoding codec XStreamXml 
2019-05-20 18:09:58 Thread-23 Using XML decoding codec XStreamXml 
2019-05-20 18:09:58 Thread-13 Using XML encoding codec XStreamXml 
2019-05-20 18:09:58 Thread-13 Using XML decoding codec XStreamXml 
2019-05-20 18:09:58 Thread-13 Resolving eureka endpoints via configuration 
2019-05-20 18:09:58 Thread-23 Resolving eureka endpoints via configuration 
2019-05-20 18:09:59 Thread-23 Disable delta property : false 
2019-05-20 18:09:59 Thread-23 Single vip registry refresh property : null 
2019-05-20 18:09:59 Thread-23 Force full registry fetch : false 
2019-05-20 18:09:59 Thread-23 Application is null : false 
2019-05-20 18:09:59 Thread-23 Registered Applications size is zero : true 
2019-05-20 18:09:59 Thread-23 Application version is -1: true 
2019-05-20 18:09:59 Thread-23 Getting all instance registry info from the eureka server 
2019-05-20 18:09:59 Thread-13 Disable delta property : false 
2019-05-20 18:09:59 Thread-13 Single vip registry refresh property : null 
2019-05-20 18:09:59 Thread-13 Force full registry fetch : false 
2019-05-20 18:09:59 Thread-13 Application is null : false 
2019-05-20 18:09:59 Thread-13 Registered Applications size is zero : true 
2019-05-20 18:09:59 Thread-13 Application version is -1: true 
2019-05-20 18:09:59 Thread-13 Getting all instance registry info from the eureka server 
2019-05-20 18:09:59 Thread-23 The response status is 200 
2019-05-20 18:09:59 Thread-13 The response status is 200 
2019-05-20 18:09:59 Thread-23 Starting heartbeat executor: renew interval is: 30 
2019-05-20 18:09:59 Thread-13 Starting heartbeat executor: renew interval is: 30 
2019-05-20 18:09:59 Thread-13 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 18:09:59 Thread-23 InstanceInfoReplicator onDemand update allowed rate per min is 4 
2019-05-20 18:09:59 Thread-13 Discovery Client initialized at timestamp 1558346999317 with initial instances count: 0 
2019-05-20 18:09:59 Thread-23 Discovery Client initialized at timestamp 1558346999318 with initial instances count: 0 
2019-05-20 18:09:59 Thread-13 Shutting down DiscoveryClient ... 
2019-05-20 18:09:59 Thread-23 Shutting down DiscoveryClient ... 
2019-05-20 18:10:02 Thread-13 Unregistering ... 
2019-05-20 18:10:02 Thread-23 Unregistering ... 
2019-05-20 18:10:02 Thread-13 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 18:10:02 Thread-23 DiscoveryClient_SERVICE-API/UMHAYKE6JYPIX2U.xdd.com:service-api:-1 - deregister  status: 404 
2019-05-20 18:10:02 Thread-13 Completed shut down of DiscoveryClient 
2019-05-20 18:10:02 Thread-13 Shutting down Quartz Scheduler 
2019-05-20 18:10:02 Thread-23 Completed shut down of DiscoveryClient 
2019-05-20 18:10:02 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 18:10:02 Thread-13 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 18:10:02 Thread-13 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
2019-05-20 18:10:02 Thread-23 Shutting down Quartz Scheduler 
2019-05-20 18:10:02 Thread-23 Scheduler scheduler_$_NON_CLUSTERED shutting down. 
2019-05-20 18:10:02 Thread-23 Scheduler scheduler_$_NON_CLUSTERED paused. 
2019-05-20 18:10:02 Thread-23 Scheduler scheduler_$_NON_CLUSTERED shutdown complete. 
